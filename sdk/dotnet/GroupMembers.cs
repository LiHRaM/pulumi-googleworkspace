// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Googleworkspace
{
    /// <summary>
    /// Group Members resource manages Google Workspace Groups Members. Group Members resides under the `https://www.googleapis.com/auth/admin.directory.group` client scope.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Googleworkspace = Pulumi.Googleworkspace;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var salesGroup = new Googleworkspace.Group("salesGroup", new()
    ///     {
    ///         Email = "sales@example.com",
    ///     });
    /// 
    ///     var michael = new Googleworkspace.User("michael", new()
    ///     {
    ///         PrimaryEmail = "michael.scott@example.com",
    ///         Password = "34819d7beeabb9260a5c854bc85b3e44",
    ///         HashFunction = "MD5",
    ///         Name = new Googleworkspace.Inputs.UserNameArgs
    ///         {
    ///             FamilyName = "Scott",
    ///             GivenName = "Michael",
    ///         },
    ///     });
    /// 
    ///     var frank = new Googleworkspace.User("frank", new()
    ///     {
    ///         PrimaryEmail = "frank.scott@example.com",
    ///         Password = "2095312189753de6ad47dfe20cbe97ec",
    ///         HashFunction = "MD5",
    ///         Name = new Googleworkspace.Inputs.UserNameArgs
    ///         {
    ///             FamilyName = "Scott",
    ///             GivenName = "Frank",
    ///         },
    ///     });
    /// 
    ///     var salesGroupMembers = new Googleworkspace.GroupMembers("salesGroupMembers", new()
    ///     {
    ///         GroupId = salesGroup.Id,
    ///         Members = new[]
    ///         {
    ///             new Googleworkspace.Inputs.GroupMembersMemberArgs
    ///             {
    ///                 Email = michael.PrimaryEmail,
    ///                 Role = "MANAGER",
    ///             },
    ///             new Googleworkspace.Inputs.GroupMembersMemberArgs
    ///             {
    ///                 Email = frank.PrimaryEmail,
    ///                 Role = "MEMBER",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import googleworkspace:index/groupMembers:GroupMembers sales groups/01abcde23fg4h5i
    /// ```
    /// </summary>
    [GoogleworkspaceResourceType("googleworkspace:index/groupMembers:GroupMembers")]
    public partial class GroupMembers : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ETag of the resource.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group
        /// ID.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The members of the group
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<Outputs.GroupMembersMember>> Members { get; private set; } = null!;


        /// <summary>
        /// Create a GroupMembers resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupMembers(string name, GroupMembersArgs args, CustomResourceOptions? options = null)
            : base("googleworkspace:index/groupMembers:GroupMembers", name, args ?? new GroupMembersArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupMembers(string name, Input<string> id, GroupMembersState? state = null, CustomResourceOptions? options = null)
            : base("googleworkspace:index/groupMembers:GroupMembers", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupMembers resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupMembers Get(string name, Input<string> id, GroupMembersState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupMembers(name, id, state, options);
        }
    }

    public sealed class GroupMembersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group
        /// ID.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        [Input("members")]
        private InputList<Inputs.GroupMembersMemberArgs>? _members;

        /// <summary>
        /// The members of the group
        /// </summary>
        public InputList<Inputs.GroupMembersMemberArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.GroupMembersMemberArgs>());
            set => _members = value;
        }

        public GroupMembersArgs()
        {
        }
        public static new GroupMembersArgs Empty => new GroupMembersArgs();
    }

    public sealed class GroupMembersState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ETag of the resource.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group
        /// ID.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("members")]
        private InputList<Inputs.GroupMembersMemberGetArgs>? _members;

        /// <summary>
        /// The members of the group
        /// </summary>
        public InputList<Inputs.GroupMembersMemberGetArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.GroupMembersMemberGetArgs>());
            set => _members = value;
        }

        public GroupMembersState()
        {
        }
        public static new GroupMembersState Empty => new GroupMembersState();
    }
}
