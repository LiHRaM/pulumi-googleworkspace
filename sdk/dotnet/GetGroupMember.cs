// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Googleworkspace
{
    public static class GetGroupMember
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Googleworkspace = Pulumi.Googleworkspace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sales = Googleworkspace.GetGroup.Invoke(new()
        ///     {
        ///         Email = "sales@example.com",
        ///     });
        /// 
        ///     var my_group_member = Googleworkspace.GetGroupMember.Invoke(new()
        ///     {
        ///         GroupId = sales.Apply(getGroupResult =&gt; getGroupResult.Id),
        ///         Email = "michael.scott@example.com",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["groupMemberRole"] = my_group_member.Apply(getGroupMemberResult =&gt; getGroupMemberResult).Apply(my_group_member =&gt; my_group_member.Apply(getGroupMemberResult =&gt; getGroupMemberResult.Role)),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGroupMemberResult> InvokeAsync(GetGroupMemberArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGroupMemberResult>("googleworkspace:index/getGroupMember:getGroupMember", args ?? new GetGroupMemberArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Googleworkspace = Pulumi.Googleworkspace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sales = Googleworkspace.GetGroup.Invoke(new()
        ///     {
        ///         Email = "sales@example.com",
        ///     });
        /// 
        ///     var my_group_member = Googleworkspace.GetGroupMember.Invoke(new()
        ///     {
        ///         GroupId = sales.Apply(getGroupResult =&gt; getGroupResult.Id),
        ///         Email = "michael.scott@example.com",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["groupMemberRole"] = my_group_member.Apply(getGroupMemberResult =&gt; getGroupMemberResult).Apply(my_group_member =&gt; my_group_member.Apply(getGroupMemberResult =&gt; getGroupMemberResult.Role)),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGroupMemberResult> Invoke(GetGroupMemberInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGroupMemberResult>("googleworkspace:index/getGroupMember:getGroupMember", args ?? new GetGroupMemberInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupMemberArgs : global::Pulumi.InvokeArgs
    {
        [Input("email")]
        public string? Email { get; set; }

        [Input("groupId", required: true)]
        public string GroupId { get; set; } = null!;

        [Input("memberId")]
        public string? MemberId { get; set; }

        public GetGroupMemberArgs()
        {
        }
        public static new GetGroupMemberArgs Empty => new GetGroupMemberArgs();
    }

    public sealed class GetGroupMemberInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        [Input("memberId")]
        public Input<string>? MemberId { get; set; }

        public GetGroupMemberInvokeArgs()
        {
        }
        public static new GetGroupMemberInvokeArgs Empty => new GetGroupMemberInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupMemberResult
    {
        public readonly string DeliverySettings;
        public readonly string Email;
        public readonly string Etag;
        public readonly string GroupId;
        public readonly string Id;
        public readonly string MemberId;
        public readonly string Role;
        public readonly string Status;
        public readonly string Type;

        [OutputConstructor]
        private GetGroupMemberResult(
            string deliverySettings,

            string email,

            string etag,

            string groupId,

            string id,

            string memberId,

            string role,

            string status,

            string type)
        {
            DeliverySettings = deliverySettings;
            Email = email;
            Etag = etag;
            GroupId = groupId;
            Id = id;
            MemberId = memberId;
            Role = role;
            Status = status;
            Type = type;
        }
    }
}
