// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Googleworkspace
{
    public static class GetDomainAlias
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Googleworkspace = Pulumi.Googleworkspace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Googleworkspace.GetDomainAlias.Invoke(new()
        ///     {
        ///         DomainAliasName = "alias-example.com",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["parent-domain"] = example.Apply(getDomainAliasResult =&gt; getDomainAliasResult.ParentDomainName),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDomainAliasResult> InvokeAsync(GetDomainAliasArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDomainAliasResult>("googleworkspace:index/getDomainAlias:getDomainAlias", args ?? new GetDomainAliasArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Googleworkspace = Pulumi.Googleworkspace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Googleworkspace.GetDomainAlias.Invoke(new()
        ///     {
        ///         DomainAliasName = "alias-example.com",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["parent-domain"] = example.Apply(getDomainAliasResult =&gt; getDomainAliasResult.ParentDomainName),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDomainAliasResult> Invoke(GetDomainAliasInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDomainAliasResult>("googleworkspace:index/getDomainAlias:getDomainAlias", args ?? new GetDomainAliasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainAliasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The domain alias name.
        /// </summary>
        [Input("domainAliasName", required: true)]
        public string DomainAliasName { get; set; } = null!;

        public GetDomainAliasArgs()
        {
        }
        public static new GetDomainAliasArgs Empty => new GetDomainAliasArgs();
    }

    public sealed class GetDomainAliasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The domain alias name.
        /// </summary>
        [Input("domainAliasName", required: true)]
        public Input<string> DomainAliasName { get; set; } = null!;

        public GetDomainAliasInvokeArgs()
        {
        }
        public static new GetDomainAliasInvokeArgs Empty => new GetDomainAliasInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainAliasResult
    {
        /// <summary>
        /// Creation time of the domain alias.
        /// </summary>
        public readonly int CreationTime;
        /// <summary>
        /// The domain alias name.
        /// </summary>
        public readonly string DomainAliasName;
        /// <summary>
        /// ETag of the resource.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.
        /// </summary>
        public readonly string ParentDomainName;
        /// <summary>
        /// Indicates the verification state of a domain alias.
        /// </summary>
        public readonly bool Verified;

        [OutputConstructor]
        private GetDomainAliasResult(
            int creationTime,

            string domainAliasName,

            string etag,

            string id,

            string parentDomainName,

            bool verified)
        {
            CreationTime = creationTime;
            DomainAliasName = domainAliasName;
            Etag = etag;
            Id = id;
            ParentDomainName = parentDomainName;
            Verified = verified;
        }
    }
}
