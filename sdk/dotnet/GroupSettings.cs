// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Googleworkspace
{
    /// <summary>
    /// Group Settings resource manages Google Workspace Groups Setting. Group Settings requires the `https://www.googleapis.com/auth/apps.groups.settings` client scope.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Googleworkspace = Pulumi.Googleworkspace;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sales = new Googleworkspace.Group("sales", new()
    ///     {
    ///         Email = "sales@example.com",
    ///     });
    /// 
    ///     var sales_settings = new Googleworkspace.GroupSettings("sales-settings", new()
    ///     {
    ///         Email = sales.Email,
    ///         AllowExternalMembers = false,
    ///         WhoCanJoin = "INVITED_CAN_JOIN",
    ///         WhoCanViewMembership = "ALL_MANAGERS_CAN_VIEW",
    ///         WhoCanPostMessage = "ALL_MEMBERS_CAN_POST",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import googleworkspace:index/groupSettings:GroupSettings sales-settings sales@example.com
    /// ```
    /// </summary>
    [GoogleworkspaceResourceType("googleworkspace:index/groupSettings:GroupSettings")]
    public partial class GroupSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
        /// your organization can become members of this group. If false, users not belonging to the organization are not allowed to
        /// become members of this group.
        /// </summary>
        [Output("allowExternalMembers")]
        public Output<bool?> AllowExternalMembers { get; private set; } = null!;

        /// <summary>
        /// Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
        /// communicate with the group.
        /// </summary>
        [Output("allowWebPosting")]
        public Output<bool?> AllowWebPosting { get; private set; } = null!;

        /// <summary>
        /// Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
        /// are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
        /// set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
        /// false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
        /// results in an error.
        /// </summary>
        [Output("archiveOnly")]
        public Output<bool?> ArchiveOnly { get; private set; } = null!;

        /// <summary>
        /// Set the content of custom footer text. The maximum number of characters is 1,000.
        /// </summary>
        [Output("customFooterText")]
        public Output<string?> CustomFooterText { get; private set; } = null!;

        /// <summary>
        /// An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
        /// defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
        /// `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
        /// must have a text value or an error is returned.
        /// </summary>
        [Output("customReplyTo")]
        public Output<string?> CustomReplyTo { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the group has a custom role that's included in one of the settings being merged.
        /// </summary>
        [Output("customRolesEnabledForSettingsToBeMerged")]
        public Output<bool> CustomRolesEnabledForSettingsToBeMerged { get; private set; } = null!;

        /// <summary>
        /// When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
        /// property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
        /// Requires `send_message_deny_notification` property to be true.
        /// </summary>
        [Output("defaultMessageDenyNotificationText")]
        public Output<string?> DefaultMessageDenyNotificationText { get; private set; } = null!;

        /// <summary>
        /// Description of the group. The maximum group description is no more than 300 characters.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The group's email address.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// Specifies whether a collaborative inbox will remain turned on for the group.
        /// </summary>
        [Output("enableCollaborativeInbox")]
        public Output<bool?> EnableCollaborativeInbox { get; private set; } = null!;

        /// <summary>
        /// Whether to include custom footer.
        /// </summary>
        [Output("includeCustomFooter")]
        public Output<bool?> IncludeCustomFooter { get; private set; } = null!;

        /// <summary>
        /// Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
        /// If false, it is not included in the Global Address List.
        /// </summary>
        [Output("includeInGlobalAddressList")]
        public Output<bool?> IncludeInGlobalAddressList { get; private set; } = null!;

        /// <summary>
        /// Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
        /// of messages sent to this group. If false, previously archived messages remain in the archive.
        /// </summary>
        [Output("isArchived")]
        public Output<bool?> IsArchived { get; private set; } = null!;

        /// <summary>
        /// Enables members to post messages as the group. If true, group member can post messages using the group's email address
        /// instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
        /// on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
        /// behalf of the group's email address.
        /// </summary>
        [Output("membersCanPostAsTheGroup")]
        public Output<bool?> MembersCanPostAsTheGroup { get; private set; } = null!;

        /// <summary>
        /// Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
        /// group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
        /// messages from non group members are sent to the group owner's email address for approval. If approved, the message is
        /// sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
        /// for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
        /// Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
        /// recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
        /// `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
        /// apply to posts made on behalf of the group.
        /// </summary>
        [Output("messageModerationLevel")]
        public Output<string?> MessageModerationLevel { get; private set; } = null!;

        /// <summary>
        /// Name of the group, which has a maximum size of 75 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
        /// found at Google Workspace Email Settings API Email Language Tags.
        /// </summary>
        [Output("primaryLanguage")]
        public Output<string?> PrimaryLanguage { get; private set; } = null!;

        /// <summary>
        /// Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
        /// group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
        /// address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
        /// `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
        /// `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
        /// `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
        /// message is sent to the group's managers, which includes all managers and the group owner.
        /// </summary>
        [Output("replyTo")]
        public Output<string?> ReplyTo { get; private set; } = null!;

        /// <summary>
        /// Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
        /// message is rejected, send the deny message notification to the message author. The
        /// `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
        /// true. If false, when a message is rejected, no notification is sent.
        /// </summary>
        [Output("sendMessageDenyNotification")]
        public Output<bool?> SendMessageDenyNotification { get; private set; } = null!;

        /// <summary>
        /// Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
        /// group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
        /// message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
        /// </summary>
        [Output("spamModerationLevel")]
        public Output<string?> SpamModerationLevel { get; private set; } = null!;

        /// <summary>
        /// Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
        /// `OWNERS_ONLY` - `NONE`
        /// </summary>
        [Output("whoCanAssistContent")]
        public Output<string?> WhoCanAssistContent { get; private set; } = null!;

        /// <summary>
        /// Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
        /// `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
        /// </summary>
        [Output("whoCanContactOwner")]
        public Output<string?> WhoCanContactOwner { get; private set; } = null!;

        /// <summary>
        /// Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
        /// `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
        /// </summary>
        [Output("whoCanDiscoverGroup")]
        public Output<string?> WhoCanDiscoverGroup { get; private set; } = null!;

        /// <summary>
        /// Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
        /// domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
        /// with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
        /// Non members can request an invitation to join.
        /// </summary>
        [Output("whoCanJoin")]
        public Output<string?> WhoCanJoin { get; private set; } = null!;

        /// <summary>
        /// Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
        /// `NONE_CAN_LEAVE`
        /// </summary>
        [Output("whoCanLeaveGroup")]
        public Output<string?> WhoCanLeaveGroup { get; private set; } = null!;

        /// <summary>
        /// Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
        /// `NONE`
        /// </summary>
        [Output("whoCanModerateContent")]
        public Output<string?> WhoCanModerateContent { get; private set; } = null!;

        /// <summary>
        /// Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
        /// </summary>
        [Output("whoCanModerateMembers")]
        public Output<string?> WhoCanModerateMembers { get; private set; } = null!;

        /// <summary>
        /// Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
        /// post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
        /// error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
        /// `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
        /// can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
        /// the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
        /// Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
        /// the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
        /// belonging to the organization are not allowed to become members of this group.
        /// </summary>
        [Output("whoCanPostMessage")]
        public Output<string> WhoCanPostMessage { get; private set; } = null!;

        /// <summary>
        /// Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
        /// messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
        /// All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
        /// messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
        /// </summary>
        [Output("whoCanViewGroup")]
        public Output<string?> WhoCanViewGroup { get; private set; } = null!;

        /// <summary>
        /// Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
        /// group members list. If a group already has external members, those members can still send email to this group. -
        /// `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
        /// can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
        /// </summary>
        [Output("whoCanViewMembership")]
        public Output<string?> WhoCanViewMembership { get; private set; } = null!;


        /// <summary>
        /// Create a GroupSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupSettings(string name, GroupSettingsArgs args, CustomResourceOptions? options = null)
            : base("googleworkspace:index/groupSettings:GroupSettings", name, args ?? new GroupSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupSettings(string name, Input<string> id, GroupSettingsState? state = null, CustomResourceOptions? options = null)
            : base("googleworkspace:index/groupSettings:GroupSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupSettings Get(string name, Input<string> id, GroupSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupSettings(name, id, state, options);
        }
    }

    public sealed class GroupSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
        /// your organization can become members of this group. If false, users not belonging to the organization are not allowed to
        /// become members of this group.
        /// </summary>
        [Input("allowExternalMembers")]
        public Input<bool>? AllowExternalMembers { get; set; }

        /// <summary>
        /// Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
        /// communicate with the group.
        /// </summary>
        [Input("allowWebPosting")]
        public Input<bool>? AllowWebPosting { get; set; }

        /// <summary>
        /// Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
        /// are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
        /// set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
        /// false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
        /// results in an error.
        /// </summary>
        [Input("archiveOnly")]
        public Input<bool>? ArchiveOnly { get; set; }

        /// <summary>
        /// Set the content of custom footer text. The maximum number of characters is 1,000.
        /// </summary>
        [Input("customFooterText")]
        public Input<string>? CustomFooterText { get; set; }

        /// <summary>
        /// An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
        /// defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
        /// `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
        /// must have a text value or an error is returned.
        /// </summary>
        [Input("customReplyTo")]
        public Input<string>? CustomReplyTo { get; set; }

        /// <summary>
        /// When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
        /// property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
        /// Requires `send_message_deny_notification` property to be true.
        /// </summary>
        [Input("defaultMessageDenyNotificationText")]
        public Input<string>? DefaultMessageDenyNotificationText { get; set; }

        /// <summary>
        /// The group's email address.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// Specifies whether a collaborative inbox will remain turned on for the group.
        /// </summary>
        [Input("enableCollaborativeInbox")]
        public Input<bool>? EnableCollaborativeInbox { get; set; }

        /// <summary>
        /// Whether to include custom footer.
        /// </summary>
        [Input("includeCustomFooter")]
        public Input<bool>? IncludeCustomFooter { get; set; }

        /// <summary>
        /// Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
        /// If false, it is not included in the Global Address List.
        /// </summary>
        [Input("includeInGlobalAddressList")]
        public Input<bool>? IncludeInGlobalAddressList { get; set; }

        /// <summary>
        /// Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
        /// of messages sent to this group. If false, previously archived messages remain in the archive.
        /// </summary>
        [Input("isArchived")]
        public Input<bool>? IsArchived { get; set; }

        /// <summary>
        /// Enables members to post messages as the group. If true, group member can post messages using the group's email address
        /// instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
        /// on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
        /// behalf of the group's email address.
        /// </summary>
        [Input("membersCanPostAsTheGroup")]
        public Input<bool>? MembersCanPostAsTheGroup { get; set; }

        /// <summary>
        /// Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
        /// group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
        /// messages from non group members are sent to the group owner's email address for approval. If approved, the message is
        /// sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
        /// for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
        /// Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
        /// recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
        /// `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
        /// apply to posts made on behalf of the group.
        /// </summary>
        [Input("messageModerationLevel")]
        public Input<string>? MessageModerationLevel { get; set; }

        /// <summary>
        /// The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
        /// found at Google Workspace Email Settings API Email Language Tags.
        /// </summary>
        [Input("primaryLanguage")]
        public Input<string>? PrimaryLanguage { get; set; }

        /// <summary>
        /// Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
        /// group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
        /// address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
        /// `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
        /// `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
        /// `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
        /// message is sent to the group's managers, which includes all managers and the group owner.
        /// </summary>
        [Input("replyTo")]
        public Input<string>? ReplyTo { get; set; }

        /// <summary>
        /// Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
        /// message is rejected, send the deny message notification to the message author. The
        /// `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
        /// true. If false, when a message is rejected, no notification is sent.
        /// </summary>
        [Input("sendMessageDenyNotification")]
        public Input<bool>? SendMessageDenyNotification { get; set; }

        /// <summary>
        /// Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
        /// group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
        /// message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
        /// </summary>
        [Input("spamModerationLevel")]
        public Input<string>? SpamModerationLevel { get; set; }

        /// <summary>
        /// Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
        /// `OWNERS_ONLY` - `NONE`
        /// </summary>
        [Input("whoCanAssistContent")]
        public Input<string>? WhoCanAssistContent { get; set; }

        /// <summary>
        /// Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
        /// `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
        /// </summary>
        [Input("whoCanContactOwner")]
        public Input<string>? WhoCanContactOwner { get; set; }

        /// <summary>
        /// Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
        /// `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
        /// </summary>
        [Input("whoCanDiscoverGroup")]
        public Input<string>? WhoCanDiscoverGroup { get; set; }

        /// <summary>
        /// Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
        /// domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
        /// with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
        /// Non members can request an invitation to join.
        /// </summary>
        [Input("whoCanJoin")]
        public Input<string>? WhoCanJoin { get; set; }

        /// <summary>
        /// Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
        /// `NONE_CAN_LEAVE`
        /// </summary>
        [Input("whoCanLeaveGroup")]
        public Input<string>? WhoCanLeaveGroup { get; set; }

        /// <summary>
        /// Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
        /// `NONE`
        /// </summary>
        [Input("whoCanModerateContent")]
        public Input<string>? WhoCanModerateContent { get; set; }

        /// <summary>
        /// Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
        /// </summary>
        [Input("whoCanModerateMembers")]
        public Input<string>? WhoCanModerateMembers { get; set; }

        /// <summary>
        /// Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
        /// post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
        /// error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
        /// `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
        /// can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
        /// the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
        /// Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
        /// the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
        /// belonging to the organization are not allowed to become members of this group.
        /// </summary>
        [Input("whoCanPostMessage")]
        public Input<string>? WhoCanPostMessage { get; set; }

        /// <summary>
        /// Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
        /// messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
        /// All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
        /// messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
        /// </summary>
        [Input("whoCanViewGroup")]
        public Input<string>? WhoCanViewGroup { get; set; }

        /// <summary>
        /// Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
        /// group members list. If a group already has external members, those members can still send email to this group. -
        /// `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
        /// can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
        /// </summary>
        [Input("whoCanViewMembership")]
        public Input<string>? WhoCanViewMembership { get; set; }

        public GroupSettingsArgs()
        {
        }
        public static new GroupSettingsArgs Empty => new GroupSettingsArgs();
    }

    public sealed class GroupSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
        /// your organization can become members of this group. If false, users not belonging to the organization are not allowed to
        /// become members of this group.
        /// </summary>
        [Input("allowExternalMembers")]
        public Input<bool>? AllowExternalMembers { get; set; }

        /// <summary>
        /// Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
        /// communicate with the group.
        /// </summary>
        [Input("allowWebPosting")]
        public Input<bool>? AllowWebPosting { get; set; }

        /// <summary>
        /// Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
        /// are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
        /// set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
        /// false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
        /// results in an error.
        /// </summary>
        [Input("archiveOnly")]
        public Input<bool>? ArchiveOnly { get; set; }

        /// <summary>
        /// Set the content of custom footer text. The maximum number of characters is 1,000.
        /// </summary>
        [Input("customFooterText")]
        public Input<string>? CustomFooterText { get; set; }

        /// <summary>
        /// An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
        /// defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
        /// `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
        /// must have a text value or an error is returned.
        /// </summary>
        [Input("customReplyTo")]
        public Input<string>? CustomReplyTo { get; set; }

        /// <summary>
        /// Specifies whether the group has a custom role that's included in one of the settings being merged.
        /// </summary>
        [Input("customRolesEnabledForSettingsToBeMerged")]
        public Input<bool>? CustomRolesEnabledForSettingsToBeMerged { get; set; }

        /// <summary>
        /// When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
        /// property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
        /// Requires `send_message_deny_notification` property to be true.
        /// </summary>
        [Input("defaultMessageDenyNotificationText")]
        public Input<string>? DefaultMessageDenyNotificationText { get; set; }

        /// <summary>
        /// Description of the group. The maximum group description is no more than 300 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The group's email address.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Specifies whether a collaborative inbox will remain turned on for the group.
        /// </summary>
        [Input("enableCollaborativeInbox")]
        public Input<bool>? EnableCollaborativeInbox { get; set; }

        /// <summary>
        /// Whether to include custom footer.
        /// </summary>
        [Input("includeCustomFooter")]
        public Input<bool>? IncludeCustomFooter { get; set; }

        /// <summary>
        /// Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
        /// If false, it is not included in the Global Address List.
        /// </summary>
        [Input("includeInGlobalAddressList")]
        public Input<bool>? IncludeInGlobalAddressList { get; set; }

        /// <summary>
        /// Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
        /// of messages sent to this group. If false, previously archived messages remain in the archive.
        /// </summary>
        [Input("isArchived")]
        public Input<bool>? IsArchived { get; set; }

        /// <summary>
        /// Enables members to post messages as the group. If true, group member can post messages using the group's email address
        /// instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
        /// on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
        /// behalf of the group's email address.
        /// </summary>
        [Input("membersCanPostAsTheGroup")]
        public Input<bool>? MembersCanPostAsTheGroup { get; set; }

        /// <summary>
        /// Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
        /// group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
        /// messages from non group members are sent to the group owner's email address for approval. If approved, the message is
        /// sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
        /// for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
        /// Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
        /// recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
        /// `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
        /// apply to posts made on behalf of the group.
        /// </summary>
        [Input("messageModerationLevel")]
        public Input<string>? MessageModerationLevel { get; set; }

        /// <summary>
        /// Name of the group, which has a maximum size of 75 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
        /// found at Google Workspace Email Settings API Email Language Tags.
        /// </summary>
        [Input("primaryLanguage")]
        public Input<string>? PrimaryLanguage { get; set; }

        /// <summary>
        /// Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
        /// group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
        /// address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
        /// `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
        /// `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
        /// `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
        /// message is sent to the group's managers, which includes all managers and the group owner.
        /// </summary>
        [Input("replyTo")]
        public Input<string>? ReplyTo { get; set; }

        /// <summary>
        /// Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
        /// message is rejected, send the deny message notification to the message author. The
        /// `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
        /// true. If false, when a message is rejected, no notification is sent.
        /// </summary>
        [Input("sendMessageDenyNotification")]
        public Input<bool>? SendMessageDenyNotification { get; set; }

        /// <summary>
        /// Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
        /// group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
        /// message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
        /// </summary>
        [Input("spamModerationLevel")]
        public Input<string>? SpamModerationLevel { get; set; }

        /// <summary>
        /// Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
        /// `OWNERS_ONLY` - `NONE`
        /// </summary>
        [Input("whoCanAssistContent")]
        public Input<string>? WhoCanAssistContent { get; set; }

        /// <summary>
        /// Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
        /// `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
        /// </summary>
        [Input("whoCanContactOwner")]
        public Input<string>? WhoCanContactOwner { get; set; }

        /// <summary>
        /// Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
        /// `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
        /// </summary>
        [Input("whoCanDiscoverGroup")]
        public Input<string>? WhoCanDiscoverGroup { get; set; }

        /// <summary>
        /// Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
        /// domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
        /// with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
        /// Non members can request an invitation to join.
        /// </summary>
        [Input("whoCanJoin")]
        public Input<string>? WhoCanJoin { get; set; }

        /// <summary>
        /// Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
        /// `NONE_CAN_LEAVE`
        /// </summary>
        [Input("whoCanLeaveGroup")]
        public Input<string>? WhoCanLeaveGroup { get; set; }

        /// <summary>
        /// Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
        /// `NONE`
        /// </summary>
        [Input("whoCanModerateContent")]
        public Input<string>? WhoCanModerateContent { get; set; }

        /// <summary>
        /// Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
        /// </summary>
        [Input("whoCanModerateMembers")]
        public Input<string>? WhoCanModerateMembers { get; set; }

        /// <summary>
        /// Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
        /// post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
        /// error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
        /// `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
        /// can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
        /// the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
        /// Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
        /// the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
        /// belonging to the organization are not allowed to become members of this group.
        /// </summary>
        [Input("whoCanPostMessage")]
        public Input<string>? WhoCanPostMessage { get; set; }

        /// <summary>
        /// Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
        /// messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
        /// All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
        /// messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
        /// </summary>
        [Input("whoCanViewGroup")]
        public Input<string>? WhoCanViewGroup { get; set; }

        /// <summary>
        /// Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
        /// group members list. If a group already has external members, those members can still send email to this group. -
        /// `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
        /// can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
        /// </summary>
        [Input("whoCanViewMembership")]
        public Input<string>? WhoCanViewMembership { get; set; }

        public GroupSettingsState()
        {
        }
        public static new GroupSettingsState Empty => new GroupSettingsState();
    }
}
