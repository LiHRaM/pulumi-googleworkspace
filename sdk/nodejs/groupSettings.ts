// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Group Settings resource manages Google Workspace Groups Setting. Group Settings requires the `https://www.googleapis.com/auth/apps.groups.settings` client scope.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as googleworkspace from "@pulumi/googleworkspace";
 *
 * const sales = new googleworkspace.Group("sales", {email: "sales@example.com"});
 * const sales_settings = new googleworkspace.GroupSettings("sales-settings", {
 *     email: sales.email,
 *     allowExternalMembers: false,
 *     whoCanJoin: "INVITED_CAN_JOIN",
 *     whoCanViewMembership: "ALL_MANAGERS_CAN_VIEW",
 *     whoCanPostMessage: "ALL_MEMBERS_CAN_POST",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import googleworkspace:index/groupSettings:GroupSettings sales-settings sales@example.com
 * ```
 */
export class GroupSettings extends pulumi.CustomResource {
    /**
     * Get an existing GroupSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupSettingsState, opts?: pulumi.CustomResourceOptions): GroupSettings {
        return new GroupSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'googleworkspace:index/groupSettings:GroupSettings';

    /**
     * Returns true if the given object is an instance of GroupSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroupSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupSettings.__pulumiType;
    }

    /**
     * Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
     * your organization can become members of this group. If false, users not belonging to the organization are not allowed to
     * become members of this group.
     */
    public readonly allowExternalMembers!: pulumi.Output<boolean | undefined>;
    /**
     * Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
     * communicate with the group.
     */
    public readonly allowWebPosting!: pulumi.Output<boolean | undefined>;
    /**
     * Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
     * are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
     * set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
     * false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
     * results in an error.
     */
    public readonly archiveOnly!: pulumi.Output<boolean | undefined>;
    /**
     * Set the content of custom footer text. The maximum number of characters is 1,000.
     */
    public readonly customFooterText!: pulumi.Output<string | undefined>;
    /**
     * An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
     * defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
     * `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
     * must have a text value or an error is returned.
     */
    public readonly customReplyTo!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the group has a custom role that's included in one of the settings being merged.
     */
    public /*out*/ readonly customRolesEnabledForSettingsToBeMerged!: pulumi.Output<boolean>;
    /**
     * When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
     * property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
     * Requires `send_message_deny_notification` property to be true.
     */
    public readonly defaultMessageDenyNotificationText!: pulumi.Output<string | undefined>;
    /**
     * Description of the group. The maximum group description is no more than 300 characters.
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    /**
     * The group's email address.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * Specifies whether a collaborative inbox will remain turned on for the group.
     */
    public readonly enableCollaborativeInbox!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to include custom footer.
     */
    public readonly includeCustomFooter!: pulumi.Output<boolean | undefined>;
    /**
     * Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
     * If false, it is not included in the Global Address List.
     */
    public readonly includeInGlobalAddressList!: pulumi.Output<boolean | undefined>;
    /**
     * Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
     * of messages sent to this group. If false, previously archived messages remain in the archive.
     */
    public readonly isArchived!: pulumi.Output<boolean | undefined>;
    /**
     * Enables members to post messages as the group. If true, group member can post messages using the group's email address
     * instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
     * on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
     * behalf of the group's email address.
     */
    public readonly membersCanPostAsTheGroup!: pulumi.Output<boolean | undefined>;
    /**
     * Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
     * group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
     * messages from non group members are sent to the group owner's email address for approval. If approved, the message is
     * sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
     * for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
     * Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
     * recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
     * `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
     * apply to posts made on behalf of the group.
     */
    public readonly messageModerationLevel!: pulumi.Output<string | undefined>;
    /**
     * Name of the group, which has a maximum size of 75 characters.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
     * found at Google Workspace Email Settings API Email Language Tags.
     */
    public readonly primaryLanguage!: pulumi.Output<string | undefined>;
    /**
     * Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
     * group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
     * address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
     * `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
     * `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
     * `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
     * message is sent to the group's managers, which includes all managers and the group owner.
     */
    public readonly replyTo!: pulumi.Output<string | undefined>;
    /**
     * Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
     * message is rejected, send the deny message notification to the message author. The
     * `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
     * true. If false, when a message is rejected, no notification is sent.
     */
    public readonly sendMessageDenyNotification!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
     * group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
     * message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
     */
    public readonly spamModerationLevel!: pulumi.Output<string | undefined>;
    /**
     * Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
     * `OWNERS_ONLY` - `NONE`
     */
    public readonly whoCanAssistContent!: pulumi.Output<string | undefined>;
    /**
     * Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
     * `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
     */
    public readonly whoCanContactOwner!: pulumi.Output<string | undefined>;
    /**
     * Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
     * `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
     */
    public readonly whoCanDiscoverGroup!: pulumi.Output<string | undefined>;
    /**
     * Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
     * domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
     * with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
     * Non members can request an invitation to join.
     */
    public readonly whoCanJoin!: pulumi.Output<string | undefined>;
    /**
     * Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
     * `NONE_CAN_LEAVE`
     */
    public readonly whoCanLeaveGroup!: pulumi.Output<string | undefined>;
    /**
     * Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
     * `NONE`
     */
    public readonly whoCanModerateContent!: pulumi.Output<string | undefined>;
    /**
     * Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
     */
    public readonly whoCanModerateMembers!: pulumi.Output<string | undefined>;
    /**
     * Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
     * post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
     * error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
     * `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
     * can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
     * the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
     * Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
     * the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
     * belonging to the organization are not allowed to become members of this group.
     */
    public readonly whoCanPostMessage!: pulumi.Output<string>;
    /**
     * Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
     * messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
     * All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
     * messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
     */
    public readonly whoCanViewGroup!: pulumi.Output<string | undefined>;
    /**
     * Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
     * group members list. If a group already has external members, those members can still send email to this group. -
     * `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
     * can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
     */
    public readonly whoCanViewMembership!: pulumi.Output<string | undefined>;

    /**
     * Create a GroupSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupSettingsArgs | GroupSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupSettingsState | undefined;
            resourceInputs["allowExternalMembers"] = state ? state.allowExternalMembers : undefined;
            resourceInputs["allowWebPosting"] = state ? state.allowWebPosting : undefined;
            resourceInputs["archiveOnly"] = state ? state.archiveOnly : undefined;
            resourceInputs["customFooterText"] = state ? state.customFooterText : undefined;
            resourceInputs["customReplyTo"] = state ? state.customReplyTo : undefined;
            resourceInputs["customRolesEnabledForSettingsToBeMerged"] = state ? state.customRolesEnabledForSettingsToBeMerged : undefined;
            resourceInputs["defaultMessageDenyNotificationText"] = state ? state.defaultMessageDenyNotificationText : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["enableCollaborativeInbox"] = state ? state.enableCollaborativeInbox : undefined;
            resourceInputs["includeCustomFooter"] = state ? state.includeCustomFooter : undefined;
            resourceInputs["includeInGlobalAddressList"] = state ? state.includeInGlobalAddressList : undefined;
            resourceInputs["isArchived"] = state ? state.isArchived : undefined;
            resourceInputs["membersCanPostAsTheGroup"] = state ? state.membersCanPostAsTheGroup : undefined;
            resourceInputs["messageModerationLevel"] = state ? state.messageModerationLevel : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primaryLanguage"] = state ? state.primaryLanguage : undefined;
            resourceInputs["replyTo"] = state ? state.replyTo : undefined;
            resourceInputs["sendMessageDenyNotification"] = state ? state.sendMessageDenyNotification : undefined;
            resourceInputs["spamModerationLevel"] = state ? state.spamModerationLevel : undefined;
            resourceInputs["whoCanAssistContent"] = state ? state.whoCanAssistContent : undefined;
            resourceInputs["whoCanContactOwner"] = state ? state.whoCanContactOwner : undefined;
            resourceInputs["whoCanDiscoverGroup"] = state ? state.whoCanDiscoverGroup : undefined;
            resourceInputs["whoCanJoin"] = state ? state.whoCanJoin : undefined;
            resourceInputs["whoCanLeaveGroup"] = state ? state.whoCanLeaveGroup : undefined;
            resourceInputs["whoCanModerateContent"] = state ? state.whoCanModerateContent : undefined;
            resourceInputs["whoCanModerateMembers"] = state ? state.whoCanModerateMembers : undefined;
            resourceInputs["whoCanPostMessage"] = state ? state.whoCanPostMessage : undefined;
            resourceInputs["whoCanViewGroup"] = state ? state.whoCanViewGroup : undefined;
            resourceInputs["whoCanViewMembership"] = state ? state.whoCanViewMembership : undefined;
        } else {
            const args = argsOrState as GroupSettingsArgs | undefined;
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            resourceInputs["allowExternalMembers"] = args ? args.allowExternalMembers : undefined;
            resourceInputs["allowWebPosting"] = args ? args.allowWebPosting : undefined;
            resourceInputs["archiveOnly"] = args ? args.archiveOnly : undefined;
            resourceInputs["customFooterText"] = args ? args.customFooterText : undefined;
            resourceInputs["customReplyTo"] = args ? args.customReplyTo : undefined;
            resourceInputs["defaultMessageDenyNotificationText"] = args ? args.defaultMessageDenyNotificationText : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["enableCollaborativeInbox"] = args ? args.enableCollaborativeInbox : undefined;
            resourceInputs["includeCustomFooter"] = args ? args.includeCustomFooter : undefined;
            resourceInputs["includeInGlobalAddressList"] = args ? args.includeInGlobalAddressList : undefined;
            resourceInputs["isArchived"] = args ? args.isArchived : undefined;
            resourceInputs["membersCanPostAsTheGroup"] = args ? args.membersCanPostAsTheGroup : undefined;
            resourceInputs["messageModerationLevel"] = args ? args.messageModerationLevel : undefined;
            resourceInputs["primaryLanguage"] = args ? args.primaryLanguage : undefined;
            resourceInputs["replyTo"] = args ? args.replyTo : undefined;
            resourceInputs["sendMessageDenyNotification"] = args ? args.sendMessageDenyNotification : undefined;
            resourceInputs["spamModerationLevel"] = args ? args.spamModerationLevel : undefined;
            resourceInputs["whoCanAssistContent"] = args ? args.whoCanAssistContent : undefined;
            resourceInputs["whoCanContactOwner"] = args ? args.whoCanContactOwner : undefined;
            resourceInputs["whoCanDiscoverGroup"] = args ? args.whoCanDiscoverGroup : undefined;
            resourceInputs["whoCanJoin"] = args ? args.whoCanJoin : undefined;
            resourceInputs["whoCanLeaveGroup"] = args ? args.whoCanLeaveGroup : undefined;
            resourceInputs["whoCanModerateContent"] = args ? args.whoCanModerateContent : undefined;
            resourceInputs["whoCanModerateMembers"] = args ? args.whoCanModerateMembers : undefined;
            resourceInputs["whoCanPostMessage"] = args ? args.whoCanPostMessage : undefined;
            resourceInputs["whoCanViewGroup"] = args ? args.whoCanViewGroup : undefined;
            resourceInputs["whoCanViewMembership"] = args ? args.whoCanViewMembership : undefined;
            resourceInputs["customRolesEnabledForSettingsToBeMerged"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroupSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GroupSettings resources.
 */
export interface GroupSettingsState {
    /**
     * Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
     * your organization can become members of this group. If false, users not belonging to the organization are not allowed to
     * become members of this group.
     */
    allowExternalMembers?: pulumi.Input<boolean>;
    /**
     * Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
     * communicate with the group.
     */
    allowWebPosting?: pulumi.Input<boolean>;
    /**
     * Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
     * are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
     * set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
     * false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
     * results in an error.
     */
    archiveOnly?: pulumi.Input<boolean>;
    /**
     * Set the content of custom footer text. The maximum number of characters is 1,000.
     */
    customFooterText?: pulumi.Input<string>;
    /**
     * An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
     * defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
     * `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
     * must have a text value or an error is returned.
     */
    customReplyTo?: pulumi.Input<string>;
    /**
     * Specifies whether the group has a custom role that's included in one of the settings being merged.
     */
    customRolesEnabledForSettingsToBeMerged?: pulumi.Input<boolean>;
    /**
     * When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
     * property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
     * Requires `send_message_deny_notification` property to be true.
     */
    defaultMessageDenyNotificationText?: pulumi.Input<string>;
    /**
     * Description of the group. The maximum group description is no more than 300 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The group's email address.
     */
    email?: pulumi.Input<string>;
    /**
     * Specifies whether a collaborative inbox will remain turned on for the group.
     */
    enableCollaborativeInbox?: pulumi.Input<boolean>;
    /**
     * Whether to include custom footer.
     */
    includeCustomFooter?: pulumi.Input<boolean>;
    /**
     * Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
     * If false, it is not included in the Global Address List.
     */
    includeInGlobalAddressList?: pulumi.Input<boolean>;
    /**
     * Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
     * of messages sent to this group. If false, previously archived messages remain in the archive.
     */
    isArchived?: pulumi.Input<boolean>;
    /**
     * Enables members to post messages as the group. If true, group member can post messages using the group's email address
     * instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
     * on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
     * behalf of the group's email address.
     */
    membersCanPostAsTheGroup?: pulumi.Input<boolean>;
    /**
     * Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
     * group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
     * messages from non group members are sent to the group owner's email address for approval. If approved, the message is
     * sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
     * for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
     * Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
     * recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
     * `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
     * apply to posts made on behalf of the group.
     */
    messageModerationLevel?: pulumi.Input<string>;
    /**
     * Name of the group, which has a maximum size of 75 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
     * found at Google Workspace Email Settings API Email Language Tags.
     */
    primaryLanguage?: pulumi.Input<string>;
    /**
     * Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
     * group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
     * address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
     * `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
     * `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
     * `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
     * message is sent to the group's managers, which includes all managers and the group owner.
     */
    replyTo?: pulumi.Input<string>;
    /**
     * Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
     * message is rejected, send the deny message notification to the message author. The
     * `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
     * true. If false, when a message is rejected, no notification is sent.
     */
    sendMessageDenyNotification?: pulumi.Input<boolean>;
    /**
     * Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
     * group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
     * message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
     */
    spamModerationLevel?: pulumi.Input<string>;
    /**
     * Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
     * `OWNERS_ONLY` - `NONE`
     */
    whoCanAssistContent?: pulumi.Input<string>;
    /**
     * Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
     * `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
     */
    whoCanContactOwner?: pulumi.Input<string>;
    /**
     * Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
     * `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
     */
    whoCanDiscoverGroup?: pulumi.Input<string>;
    /**
     * Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
     * domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
     * with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
     * Non members can request an invitation to join.
     */
    whoCanJoin?: pulumi.Input<string>;
    /**
     * Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
     * `NONE_CAN_LEAVE`
     */
    whoCanLeaveGroup?: pulumi.Input<string>;
    /**
     * Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
     * `NONE`
     */
    whoCanModerateContent?: pulumi.Input<string>;
    /**
     * Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
     */
    whoCanModerateMembers?: pulumi.Input<string>;
    /**
     * Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
     * post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
     * error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
     * `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
     * can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
     * the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
     * Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
     * the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
     * belonging to the organization are not allowed to become members of this group.
     */
    whoCanPostMessage?: pulumi.Input<string>;
    /**
     * Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
     * messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
     * All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
     * messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
     */
    whoCanViewGroup?: pulumi.Input<string>;
    /**
     * Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
     * group members list. If a group already has external members, those members can still send email to this group. -
     * `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
     * can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
     */
    whoCanViewMembership?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GroupSettings resource.
 */
export interface GroupSettingsArgs {
    /**
     * Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
     * your organization can become members of this group. If false, users not belonging to the organization are not allowed to
     * become members of this group.
     */
    allowExternalMembers?: pulumi.Input<boolean>;
    /**
     * Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
     * communicate with the group.
     */
    allowWebPosting?: pulumi.Input<boolean>;
    /**
     * Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
     * are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
     * set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
     * false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
     * results in an error.
     */
    archiveOnly?: pulumi.Input<boolean>;
    /**
     * Set the content of custom footer text. The maximum number of characters is 1,000.
     */
    customFooterText?: pulumi.Input<string>;
    /**
     * An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
     * defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
     * `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
     * must have a text value or an error is returned.
     */
    customReplyTo?: pulumi.Input<string>;
    /**
     * When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
     * property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
     * Requires `send_message_deny_notification` property to be true.
     */
    defaultMessageDenyNotificationText?: pulumi.Input<string>;
    /**
     * The group's email address.
     */
    email: pulumi.Input<string>;
    /**
     * Specifies whether a collaborative inbox will remain turned on for the group.
     */
    enableCollaborativeInbox?: pulumi.Input<boolean>;
    /**
     * Whether to include custom footer.
     */
    includeCustomFooter?: pulumi.Input<boolean>;
    /**
     * Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
     * If false, it is not included in the Global Address List.
     */
    includeInGlobalAddressList?: pulumi.Input<boolean>;
    /**
     * Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
     * of messages sent to this group. If false, previously archived messages remain in the archive.
     */
    isArchived?: pulumi.Input<boolean>;
    /**
     * Enables members to post messages as the group. If true, group member can post messages using the group's email address
     * instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
     * on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
     * behalf of the group's email address.
     */
    membersCanPostAsTheGroup?: pulumi.Input<boolean>;
    /**
     * Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
     * group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
     * messages from non group members are sent to the group owner's email address for approval. If approved, the message is
     * sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
     * for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
     * Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
     * recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
     * `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
     * apply to posts made on behalf of the group.
     */
    messageModerationLevel?: pulumi.Input<string>;
    /**
     * The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
     * found at Google Workspace Email Settings API Email Language Tags.
     */
    primaryLanguage?: pulumi.Input<string>;
    /**
     * Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
     * group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
     * address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
     * `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
     * `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
     * `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
     * message is sent to the group's managers, which includes all managers and the group owner.
     */
    replyTo?: pulumi.Input<string>;
    /**
     * Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
     * message is rejected, send the deny message notification to the message author. The
     * `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
     * true. If false, when a message is rejected, no notification is sent.
     */
    sendMessageDenyNotification?: pulumi.Input<boolean>;
    /**
     * Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
     * group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
     * message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
     */
    spamModerationLevel?: pulumi.Input<string>;
    /**
     * Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
     * `OWNERS_ONLY` - `NONE`
     */
    whoCanAssistContent?: pulumi.Input<string>;
    /**
     * Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
     * `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
     */
    whoCanContactOwner?: pulumi.Input<string>;
    /**
     * Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
     * `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
     */
    whoCanDiscoverGroup?: pulumi.Input<string>;
    /**
     * Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
     * domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
     * with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
     * Non members can request an invitation to join.
     */
    whoCanJoin?: pulumi.Input<string>;
    /**
     * Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
     * `NONE_CAN_LEAVE`
     */
    whoCanLeaveGroup?: pulumi.Input<string>;
    /**
     * Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
     * `NONE`
     */
    whoCanModerateContent?: pulumi.Input<string>;
    /**
     * Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
     */
    whoCanModerateMembers?: pulumi.Input<string>;
    /**
     * Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
     * post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
     * error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
     * `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
     * can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
     * the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
     * Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
     * the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
     * belonging to the organization are not allowed to become members of this group.
     */
    whoCanPostMessage?: pulumi.Input<string>;
    /**
     * Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
     * messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
     * All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
     * messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
     */
    whoCanViewGroup?: pulumi.Input<string>;
    /**
     * Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
     * group members list. If a group already has external members, those members can still send email to this group. -
     * `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
     * can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
     */
    whoCanViewMembership?: pulumi.Input<string>;
}
