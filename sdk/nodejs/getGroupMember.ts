// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as googleworkspace from "@pulumi/googleworkspace";
 *
 * const sales = googleworkspace.getGroup({
 *     email: "sales@example.com",
 * });
 * const my-group-member = sales.then(sales => googleworkspace.getGroupMember({
 *     groupId: sales.id,
 *     email: "michael.scott@example.com",
 * }));
 * export const groupMemberRole = my_group_member.then(my_group_member => my_group_member.role);
 * ```
 */
export function getGroupMember(args: GetGroupMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupMemberResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("googleworkspace:index/getGroupMember:getGroupMember", {
        "email": args.email,
        "groupId": args.groupId,
        "memberId": args.memberId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroupMember.
 */
export interface GetGroupMemberArgs {
    email?: string;
    groupId: string;
    memberId?: string;
}

/**
 * A collection of values returned by getGroupMember.
 */
export interface GetGroupMemberResult {
    readonly deliverySettings: string;
    readonly email: string;
    readonly etag: string;
    readonly groupId: string;
    readonly id: string;
    readonly memberId: string;
    readonly role: string;
    readonly status: string;
    readonly type: string;
}

export function getGroupMemberOutput(args: GetGroupMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupMemberResult> {
    return pulumi.output(args).apply(a => getGroupMember(a, opts))
}

/**
 * A collection of arguments for invoking getGroupMember.
 */
export interface GetGroupMemberOutputArgs {
    email?: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    memberId?: pulumi.Input<string>;
}
