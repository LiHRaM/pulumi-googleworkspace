// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as googleworkspace from "@pulumi/googleworkspace";
 *
 * const salesGroup = googleworkspace.getGroup({
 *     email: "sales@example.com",
 * });
 * const salesGroupMembers = salesGroup.then(salesGroup => googleworkspace.getGroupMembers({
 *     groupId: salesGroup.id,
 * }));
 * export const groupMembers = salesGroupMembers.then(salesGroupMembers => salesGroupMembers.members);
 * ```
 */
export function getGroupMembers(args: GetGroupMembersArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupMembersResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("googleworkspace:index/getGroupMembers:getGroupMembers", {
        "groupId": args.groupId,
        "includeDerivedMembership": args.includeDerivedMembership,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroupMembers.
 */
export interface GetGroupMembersArgs {
    /**
     * Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
     */
    groupId: string;
    /**
     * If true, lists indirect group memberships
     */
    includeDerivedMembership?: boolean;
}

/**
 * A collection of values returned by getGroupMembers.
 */
export interface GetGroupMembersResult {
    /**
     * ETag of the resource.
     */
    readonly etag: string;
    /**
     * Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
     */
    readonly groupId: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * If true, lists indirect group memberships
     */
    readonly includeDerivedMembership?: boolean;
    /**
     * The members of the group
     */
    readonly members: outputs.GetGroupMembersMember[];
}

export function getGroupMembersOutput(args: GetGroupMembersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupMembersResult> {
    return pulumi.output(args).apply(a => getGroupMembers(a, opts))
}

/**
 * A collection of arguments for invoking getGroupMembers.
 */
export interface GetGroupMembersOutputArgs {
    /**
     * Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
     */
    groupId: pulumi.Input<string>;
    /**
     * If true, lists indirect group memberships
     */
    includeDerivedMembership?: pulumi.Input<boolean>;
}
