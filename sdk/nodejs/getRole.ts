// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as googleworkspace from "@pulumi/googleworkspace";
 *
 * const group-admin = googleworkspace.getRole({
 *     name: "_GROUPS_ADMIN_ROLE",
 * });
 * export const isSystemRole = group_admin.then(group_admin => group_admin.isSystemRole);
 * ```
 */
export function getRole(args: GetRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("googleworkspace:index/getRole:getRole", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleArgs {
    /**
     * Name of the role.
     */
    name: string;
}

/**
 * A collection of values returned by getRole.
 */
export interface GetRoleResult {
    /**
     * A short description of the role.
     */
    readonly description: string;
    /**
     * ETag of the resource.
     */
    readonly etag: string;
    /**
     * ID of the role.
     */
    readonly id: string;
    /**
     * Returns true if the role is a super admin role.
     */
    readonly isSuperAdminRole: boolean;
    /**
     * Returns true if this is a pre-defined system role.
     */
    readonly isSystemRole: boolean;
    /**
     * Name of the role.
     */
    readonly name: string;
    /**
     * The set of privileges that are granted to this role.
     */
    readonly privileges: outputs.GetRolePrivilege[];
}

export function getRoleOutput(args: GetRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleResult> {
    return pulumi.output(args).apply(a => getRole(a, opts))
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleOutputArgs {
    /**
     * Name of the role.
     */
    name: pulumi.Input<string>;
}
