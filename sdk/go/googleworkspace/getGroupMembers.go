// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googleworkspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-googleworkspace/sdk/go/googleworkspace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		salesGroup, err := googleworkspace.LookupGroup(ctx, &GetGroupArgs{
// 			Email: pulumi.StringRef("sales@example.com"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		salesGroupMembers, err := googleworkspace.LookupGroupMembers(ctx, &GetGroupMembersArgs{
// 			GroupId: salesGroup.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("groupMembers", salesGroupMembers.Members)
// 		return nil
// 	})
// }
// ```
func LookupGroupMembers(ctx *pulumi.Context, args *LookupGroupMembersArgs, opts ...pulumi.InvokeOption) (*LookupGroupMembersResult, error) {
	var rv LookupGroupMembersResult
	err := ctx.Invoke("googleworkspace:index/getGroupMembers:getGroupMembers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroupMembers.
type LookupGroupMembersArgs struct {
	// Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
	GroupId string `pulumi:"groupId"`
	// If true, lists indirect group memberships
	IncludeDerivedMembership *bool `pulumi:"includeDerivedMembership"`
}

// A collection of values returned by getGroupMembers.
type LookupGroupMembersResult struct {
	// ETag of the resource.
	Etag string `pulumi:"etag"`
	// Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
	GroupId string `pulumi:"groupId"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// If true, lists indirect group memberships
	IncludeDerivedMembership *bool `pulumi:"includeDerivedMembership"`
	// The members of the group
	Members []GetGroupMembersMember `pulumi:"members"`
}

func LookupGroupMembersOutput(ctx *pulumi.Context, args LookupGroupMembersOutputArgs, opts ...pulumi.InvokeOption) LookupGroupMembersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGroupMembersResult, error) {
			args := v.(LookupGroupMembersArgs)
			r, err := LookupGroupMembers(ctx, &args, opts...)
			var s LookupGroupMembersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGroupMembersResultOutput)
}

// A collection of arguments for invoking getGroupMembers.
type LookupGroupMembersOutputArgs struct {
	// Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// If true, lists indirect group memberships
	IncludeDerivedMembership pulumi.BoolPtrInput `pulumi:"includeDerivedMembership"`
}

func (LookupGroupMembersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupMembersArgs)(nil)).Elem()
}

// A collection of values returned by getGroupMembers.
type LookupGroupMembersResultOutput struct{ *pulumi.OutputState }

func (LookupGroupMembersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupMembersResult)(nil)).Elem()
}

func (o LookupGroupMembersResultOutput) ToLookupGroupMembersResultOutput() LookupGroupMembersResultOutput {
	return o
}

func (o LookupGroupMembersResultOutput) ToLookupGroupMembersResultOutputWithContext(ctx context.Context) LookupGroupMembersResultOutput {
	return o
}

// ETag of the resource.
func (o LookupGroupMembersResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupMembersResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
func (o LookupGroupMembersResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupMembersResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupGroupMembersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupMembersResult) string { return v.Id }).(pulumi.StringOutput)
}

// If true, lists indirect group memberships
func (o LookupGroupMembersResultOutput) IncludeDerivedMembership() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupGroupMembersResult) *bool { return v.IncludeDerivedMembership }).(pulumi.BoolPtrOutput)
}

// The members of the group
func (o LookupGroupMembersResultOutput) Members() GetGroupMembersMemberArrayOutput {
	return o.ApplyT(func(v LookupGroupMembersResult) []GetGroupMembersMember { return v.Members }).(GetGroupMembersMemberArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupMembersResultOutput{})
}
