// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googleworkspace

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Group Settings resource manages Google Workspace Groups Setting. Group Settings requires the `https://www.googleapis.com/auth/apps.groups.settings` client scope.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-googleworkspace/sdk/go/googleworkspace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		sales, err := googleworkspace.NewGroup(ctx, "sales", &googleworkspace.GroupArgs{
// 			Email: pulumi.String("sales@example.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = googleworkspace.NewGroupSettings(ctx, "sales-settings", &googleworkspace.GroupSettingsArgs{
// 			Email:                sales.Email,
// 			AllowExternalMembers: pulumi.Bool(false),
// 			WhoCanJoin:           pulumi.String("INVITED_CAN_JOIN"),
// 			WhoCanViewMembership: pulumi.String("ALL_MANAGERS_CAN_VIEW"),
// 			WhoCanPostMessage:    pulumi.String("ALL_MEMBERS_CAN_POST"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ```sh
//  $ pulumi import googleworkspace:index/groupSettings:GroupSettings sales-settings sales@example.com
// ```
type GroupSettings struct {
	pulumi.CustomResourceState

	// Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
	// your organization can become members of this group. If false, users not belonging to the organization are not allowed to
	// become members of this group.
	AllowExternalMembers pulumi.BoolPtrOutput `pulumi:"allowExternalMembers"`
	// Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
	// communicate with the group.
	AllowWebPosting pulumi.BoolPtrOutput `pulumi:"allowWebPosting"`
	// Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
	// are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
	// set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
	// false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
	// results in an error.
	ArchiveOnly pulumi.BoolPtrOutput `pulumi:"archiveOnly"`
	// Set the content of custom footer text. The maximum number of characters is 1,000.
	CustomFooterText pulumi.StringPtrOutput `pulumi:"customFooterText"`
	// An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
	// defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
	// `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
	// must have a text value or an error is returned.
	CustomReplyTo pulumi.StringPtrOutput `pulumi:"customReplyTo"`
	// Specifies whether the group has a custom role that's included in one of the settings being merged.
	CustomRolesEnabledForSettingsToBeMerged pulumi.BoolOutput `pulumi:"customRolesEnabledForSettingsToBeMerged"`
	// When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
	// property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
	// Requires `send_message_deny_notification` property to be true.
	DefaultMessageDenyNotificationText pulumi.StringPtrOutput `pulumi:"defaultMessageDenyNotificationText"`
	// Description of the group. The maximum group description is no more than 300 characters.
	Description pulumi.StringOutput `pulumi:"description"`
	// The group's email address.
	Email pulumi.StringOutput `pulumi:"email"`
	// Specifies whether a collaborative inbox will remain turned on for the group.
	EnableCollaborativeInbox pulumi.BoolPtrOutput `pulumi:"enableCollaborativeInbox"`
	// Whether to include custom footer.
	IncludeCustomFooter pulumi.BoolPtrOutput `pulumi:"includeCustomFooter"`
	// Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
	// If false, it is not included in the Global Address List.
	IncludeInGlobalAddressList pulumi.BoolPtrOutput `pulumi:"includeInGlobalAddressList"`
	// Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
	// of messages sent to this group. If false, previously archived messages remain in the archive.
	IsArchived pulumi.BoolPtrOutput `pulumi:"isArchived"`
	// Enables members to post messages as the group. If true, group member can post messages using the group's email address
	// instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
	// on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
	// behalf of the group's email address.
	MembersCanPostAsTheGroup pulumi.BoolPtrOutput `pulumi:"membersCanPostAsTheGroup"`
	// Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
	// group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
	// messages from non group members are sent to the group owner's email address for approval. If approved, the message is
	// sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
	// for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
	// Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
	// recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
	// `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
	// apply to posts made on behalf of the group.
	MessageModerationLevel pulumi.StringPtrOutput `pulumi:"messageModerationLevel"`
	// Name of the group, which has a maximum size of 75 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
	// found at Google Workspace Email Settings API Email Language Tags.
	PrimaryLanguage pulumi.StringPtrOutput `pulumi:"primaryLanguage"`
	// Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
	// group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
	// address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
	// `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
	// `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
	// `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
	// message is sent to the group's managers, which includes all managers and the group owner.
	ReplyTo pulumi.StringPtrOutput `pulumi:"replyTo"`
	// Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
	// message is rejected, send the deny message notification to the message author. The
	// `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
	// true. If false, when a message is rejected, no notification is sent.
	SendMessageDenyNotification pulumi.BoolPtrOutput `pulumi:"sendMessageDenyNotification"`
	// Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
	// group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
	// message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
	SpamModerationLevel pulumi.StringPtrOutput `pulumi:"spamModerationLevel"`
	// Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
	// `OWNERS_ONLY` - `NONE`
	WhoCanAssistContent pulumi.StringPtrOutput `pulumi:"whoCanAssistContent"`
	// Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
	// `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
	WhoCanContactOwner pulumi.StringPtrOutput `pulumi:"whoCanContactOwner"`
	// Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
	// `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
	WhoCanDiscoverGroup pulumi.StringPtrOutput `pulumi:"whoCanDiscoverGroup"`
	// Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
	// domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
	// with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
	// Non members can request an invitation to join.
	WhoCanJoin pulumi.StringPtrOutput `pulumi:"whoCanJoin"`
	// Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
	// `NONE_CAN_LEAVE`
	WhoCanLeaveGroup pulumi.StringPtrOutput `pulumi:"whoCanLeaveGroup"`
	// Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
	// `NONE`
	WhoCanModerateContent pulumi.StringPtrOutput `pulumi:"whoCanModerateContent"`
	// Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
	WhoCanModerateMembers pulumi.StringPtrOutput `pulumi:"whoCanModerateMembers"`
	// Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
	// post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
	// error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
	// `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
	// can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
	// the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
	// Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
	// the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
	// belonging to the organization are not allowed to become members of this group.
	WhoCanPostMessage pulumi.StringOutput `pulumi:"whoCanPostMessage"`
	// Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
	// messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
	// All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
	// messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
	WhoCanViewGroup pulumi.StringPtrOutput `pulumi:"whoCanViewGroup"`
	// Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
	// group members list. If a group already has external members, those members can still send email to this group. -
	// `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
	// can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
	WhoCanViewMembership pulumi.StringPtrOutput `pulumi:"whoCanViewMembership"`
}

// NewGroupSettings registers a new resource with the given unique name, arguments, and options.
func NewGroupSettings(ctx *pulumi.Context,
	name string, args *GroupSettingsArgs, opts ...pulumi.ResourceOption) (*GroupSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	var resource GroupSettings
	err := ctx.RegisterResource("googleworkspace:index/groupSettings:GroupSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroupSettings gets an existing GroupSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupSettingsState, opts ...pulumi.ResourceOption) (*GroupSettings, error) {
	var resource GroupSettings
	err := ctx.ReadResource("googleworkspace:index/groupSettings:GroupSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GroupSettings resources.
type groupSettingsState struct {
	// Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
	// your organization can become members of this group. If false, users not belonging to the organization are not allowed to
	// become members of this group.
	AllowExternalMembers *bool `pulumi:"allowExternalMembers"`
	// Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
	// communicate with the group.
	AllowWebPosting *bool `pulumi:"allowWebPosting"`
	// Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
	// are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
	// set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
	// false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
	// results in an error.
	ArchiveOnly *bool `pulumi:"archiveOnly"`
	// Set the content of custom footer text. The maximum number of characters is 1,000.
	CustomFooterText *string `pulumi:"customFooterText"`
	// An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
	// defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
	// `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
	// must have a text value or an error is returned.
	CustomReplyTo *string `pulumi:"customReplyTo"`
	// Specifies whether the group has a custom role that's included in one of the settings being merged.
	CustomRolesEnabledForSettingsToBeMerged *bool `pulumi:"customRolesEnabledForSettingsToBeMerged"`
	// When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
	// property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
	// Requires `send_message_deny_notification` property to be true.
	DefaultMessageDenyNotificationText *string `pulumi:"defaultMessageDenyNotificationText"`
	// Description of the group. The maximum group description is no more than 300 characters.
	Description *string `pulumi:"description"`
	// The group's email address.
	Email *string `pulumi:"email"`
	// Specifies whether a collaborative inbox will remain turned on for the group.
	EnableCollaborativeInbox *bool `pulumi:"enableCollaborativeInbox"`
	// Whether to include custom footer.
	IncludeCustomFooter *bool `pulumi:"includeCustomFooter"`
	// Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
	// If false, it is not included in the Global Address List.
	IncludeInGlobalAddressList *bool `pulumi:"includeInGlobalAddressList"`
	// Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
	// of messages sent to this group. If false, previously archived messages remain in the archive.
	IsArchived *bool `pulumi:"isArchived"`
	// Enables members to post messages as the group. If true, group member can post messages using the group's email address
	// instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
	// on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
	// behalf of the group's email address.
	MembersCanPostAsTheGroup *bool `pulumi:"membersCanPostAsTheGroup"`
	// Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
	// group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
	// messages from non group members are sent to the group owner's email address for approval. If approved, the message is
	// sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
	// for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
	// Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
	// recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
	// `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
	// apply to posts made on behalf of the group.
	MessageModerationLevel *string `pulumi:"messageModerationLevel"`
	// Name of the group, which has a maximum size of 75 characters.
	Name *string `pulumi:"name"`
	// The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
	// found at Google Workspace Email Settings API Email Language Tags.
	PrimaryLanguage *string `pulumi:"primaryLanguage"`
	// Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
	// group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
	// address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
	// `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
	// `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
	// `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
	// message is sent to the group's managers, which includes all managers and the group owner.
	ReplyTo *string `pulumi:"replyTo"`
	// Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
	// message is rejected, send the deny message notification to the message author. The
	// `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
	// true. If false, when a message is rejected, no notification is sent.
	SendMessageDenyNotification *bool `pulumi:"sendMessageDenyNotification"`
	// Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
	// group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
	// message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
	SpamModerationLevel *string `pulumi:"spamModerationLevel"`
	// Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
	// `OWNERS_ONLY` - `NONE`
	WhoCanAssistContent *string `pulumi:"whoCanAssistContent"`
	// Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
	// `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
	WhoCanContactOwner *string `pulumi:"whoCanContactOwner"`
	// Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
	// `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
	WhoCanDiscoverGroup *string `pulumi:"whoCanDiscoverGroup"`
	// Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
	// domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
	// with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
	// Non members can request an invitation to join.
	WhoCanJoin *string `pulumi:"whoCanJoin"`
	// Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
	// `NONE_CAN_LEAVE`
	WhoCanLeaveGroup *string `pulumi:"whoCanLeaveGroup"`
	// Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
	// `NONE`
	WhoCanModerateContent *string `pulumi:"whoCanModerateContent"`
	// Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
	WhoCanModerateMembers *string `pulumi:"whoCanModerateMembers"`
	// Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
	// post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
	// error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
	// `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
	// can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
	// the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
	// Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
	// the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
	// belonging to the organization are not allowed to become members of this group.
	WhoCanPostMessage *string `pulumi:"whoCanPostMessage"`
	// Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
	// messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
	// All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
	// messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
	WhoCanViewGroup *string `pulumi:"whoCanViewGroup"`
	// Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
	// group members list. If a group already has external members, those members can still send email to this group. -
	// `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
	// can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
	WhoCanViewMembership *string `pulumi:"whoCanViewMembership"`
}

type GroupSettingsState struct {
	// Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
	// your organization can become members of this group. If false, users not belonging to the organization are not allowed to
	// become members of this group.
	AllowExternalMembers pulumi.BoolPtrInput
	// Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
	// communicate with the group.
	AllowWebPosting pulumi.BoolPtrInput
	// Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
	// are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
	// set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
	// false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
	// results in an error.
	ArchiveOnly pulumi.BoolPtrInput
	// Set the content of custom footer text. The maximum number of characters is 1,000.
	CustomFooterText pulumi.StringPtrInput
	// An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
	// defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
	// `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
	// must have a text value or an error is returned.
	CustomReplyTo pulumi.StringPtrInput
	// Specifies whether the group has a custom role that's included in one of the settings being merged.
	CustomRolesEnabledForSettingsToBeMerged pulumi.BoolPtrInput
	// When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
	// property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
	// Requires `send_message_deny_notification` property to be true.
	DefaultMessageDenyNotificationText pulumi.StringPtrInput
	// Description of the group. The maximum group description is no more than 300 characters.
	Description pulumi.StringPtrInput
	// The group's email address.
	Email pulumi.StringPtrInput
	// Specifies whether a collaborative inbox will remain turned on for the group.
	EnableCollaborativeInbox pulumi.BoolPtrInput
	// Whether to include custom footer.
	IncludeCustomFooter pulumi.BoolPtrInput
	// Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
	// If false, it is not included in the Global Address List.
	IncludeInGlobalAddressList pulumi.BoolPtrInput
	// Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
	// of messages sent to this group. If false, previously archived messages remain in the archive.
	IsArchived pulumi.BoolPtrInput
	// Enables members to post messages as the group. If true, group member can post messages using the group's email address
	// instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
	// on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
	// behalf of the group's email address.
	MembersCanPostAsTheGroup pulumi.BoolPtrInput
	// Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
	// group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
	// messages from non group members are sent to the group owner's email address for approval. If approved, the message is
	// sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
	// for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
	// Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
	// recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
	// `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
	// apply to posts made on behalf of the group.
	MessageModerationLevel pulumi.StringPtrInput
	// Name of the group, which has a maximum size of 75 characters.
	Name pulumi.StringPtrInput
	// The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
	// found at Google Workspace Email Settings API Email Language Tags.
	PrimaryLanguage pulumi.StringPtrInput
	// Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
	// group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
	// address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
	// `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
	// `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
	// `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
	// message is sent to the group's managers, which includes all managers and the group owner.
	ReplyTo pulumi.StringPtrInput
	// Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
	// message is rejected, send the deny message notification to the message author. The
	// `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
	// true. If false, when a message is rejected, no notification is sent.
	SendMessageDenyNotification pulumi.BoolPtrInput
	// Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
	// group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
	// message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
	SpamModerationLevel pulumi.StringPtrInput
	// Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
	// `OWNERS_ONLY` - `NONE`
	WhoCanAssistContent pulumi.StringPtrInput
	// Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
	// `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
	WhoCanContactOwner pulumi.StringPtrInput
	// Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
	// `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
	WhoCanDiscoverGroup pulumi.StringPtrInput
	// Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
	// domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
	// with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
	// Non members can request an invitation to join.
	WhoCanJoin pulumi.StringPtrInput
	// Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
	// `NONE_CAN_LEAVE`
	WhoCanLeaveGroup pulumi.StringPtrInput
	// Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
	// `NONE`
	WhoCanModerateContent pulumi.StringPtrInput
	// Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
	WhoCanModerateMembers pulumi.StringPtrInput
	// Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
	// post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
	// error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
	// `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
	// can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
	// the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
	// Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
	// the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
	// belonging to the organization are not allowed to become members of this group.
	WhoCanPostMessage pulumi.StringPtrInput
	// Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
	// messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
	// All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
	// messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
	WhoCanViewGroup pulumi.StringPtrInput
	// Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
	// group members list. If a group already has external members, those members can still send email to this group. -
	// `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
	// can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
	WhoCanViewMembership pulumi.StringPtrInput
}

func (GroupSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupSettingsState)(nil)).Elem()
}

type groupSettingsArgs struct {
	// Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
	// your organization can become members of this group. If false, users not belonging to the organization are not allowed to
	// become members of this group.
	AllowExternalMembers *bool `pulumi:"allowExternalMembers"`
	// Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
	// communicate with the group.
	AllowWebPosting *bool `pulumi:"allowWebPosting"`
	// Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
	// are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
	// set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
	// false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
	// results in an error.
	ArchiveOnly *bool `pulumi:"archiveOnly"`
	// Set the content of custom footer text. The maximum number of characters is 1,000.
	CustomFooterText *string `pulumi:"customFooterText"`
	// An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
	// defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
	// `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
	// must have a text value or an error is returned.
	CustomReplyTo *string `pulumi:"customReplyTo"`
	// When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
	// property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
	// Requires `send_message_deny_notification` property to be true.
	DefaultMessageDenyNotificationText *string `pulumi:"defaultMessageDenyNotificationText"`
	// The group's email address.
	Email string `pulumi:"email"`
	// Specifies whether a collaborative inbox will remain turned on for the group.
	EnableCollaborativeInbox *bool `pulumi:"enableCollaborativeInbox"`
	// Whether to include custom footer.
	IncludeCustomFooter *bool `pulumi:"includeCustomFooter"`
	// Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
	// If false, it is not included in the Global Address List.
	IncludeInGlobalAddressList *bool `pulumi:"includeInGlobalAddressList"`
	// Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
	// of messages sent to this group. If false, previously archived messages remain in the archive.
	IsArchived *bool `pulumi:"isArchived"`
	// Enables members to post messages as the group. If true, group member can post messages using the group's email address
	// instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
	// on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
	// behalf of the group's email address.
	MembersCanPostAsTheGroup *bool `pulumi:"membersCanPostAsTheGroup"`
	// Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
	// group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
	// messages from non group members are sent to the group owner's email address for approval. If approved, the message is
	// sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
	// for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
	// Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
	// recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
	// `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
	// apply to posts made on behalf of the group.
	MessageModerationLevel *string `pulumi:"messageModerationLevel"`
	// The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
	// found at Google Workspace Email Settings API Email Language Tags.
	PrimaryLanguage *string `pulumi:"primaryLanguage"`
	// Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
	// group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
	// address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
	// `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
	// `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
	// `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
	// message is sent to the group's managers, which includes all managers and the group owner.
	ReplyTo *string `pulumi:"replyTo"`
	// Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
	// message is rejected, send the deny message notification to the message author. The
	// `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
	// true. If false, when a message is rejected, no notification is sent.
	SendMessageDenyNotification *bool `pulumi:"sendMessageDenyNotification"`
	// Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
	// group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
	// message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
	SpamModerationLevel *string `pulumi:"spamModerationLevel"`
	// Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
	// `OWNERS_ONLY` - `NONE`
	WhoCanAssistContent *string `pulumi:"whoCanAssistContent"`
	// Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
	// `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
	WhoCanContactOwner *string `pulumi:"whoCanContactOwner"`
	// Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
	// `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
	WhoCanDiscoverGroup *string `pulumi:"whoCanDiscoverGroup"`
	// Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
	// domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
	// with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
	// Non members can request an invitation to join.
	WhoCanJoin *string `pulumi:"whoCanJoin"`
	// Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
	// `NONE_CAN_LEAVE`
	WhoCanLeaveGroup *string `pulumi:"whoCanLeaveGroup"`
	// Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
	// `NONE`
	WhoCanModerateContent *string `pulumi:"whoCanModerateContent"`
	// Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
	WhoCanModerateMembers *string `pulumi:"whoCanModerateMembers"`
	// Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
	// post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
	// error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
	// `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
	// can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
	// the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
	// Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
	// the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
	// belonging to the organization are not allowed to become members of this group.
	WhoCanPostMessage *string `pulumi:"whoCanPostMessage"`
	// Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
	// messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
	// All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
	// messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
	WhoCanViewGroup *string `pulumi:"whoCanViewGroup"`
	// Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
	// group members list. If a group already has external members, those members can still send email to this group. -
	// `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
	// can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
	WhoCanViewMembership *string `pulumi:"whoCanViewMembership"`
}

// The set of arguments for constructing a GroupSettings resource.
type GroupSettingsArgs struct {
	// Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
	// your organization can become members of this group. If false, users not belonging to the organization are not allowed to
	// become members of this group.
	AllowExternalMembers pulumi.BoolPtrInput
	// Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
	// communicate with the group.
	AllowWebPosting pulumi.BoolPtrInput
	// Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
	// are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
	// set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
	// false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
	// results in an error.
	ArchiveOnly pulumi.BoolPtrInput
	// Set the content of custom footer text. The maximum number of characters is 1,000.
	CustomFooterText pulumi.StringPtrInput
	// An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
	// defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
	// `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
	// must have a text value or an error is returned.
	CustomReplyTo pulumi.StringPtrInput
	// When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
	// property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
	// Requires `send_message_deny_notification` property to be true.
	DefaultMessageDenyNotificationText pulumi.StringPtrInput
	// The group's email address.
	Email pulumi.StringInput
	// Specifies whether a collaborative inbox will remain turned on for the group.
	EnableCollaborativeInbox pulumi.BoolPtrInput
	// Whether to include custom footer.
	IncludeCustomFooter pulumi.BoolPtrInput
	// Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
	// If false, it is not included in the Global Address List.
	IncludeInGlobalAddressList pulumi.BoolPtrInput
	// Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
	// of messages sent to this group. If false, previously archived messages remain in the archive.
	IsArchived pulumi.BoolPtrInput
	// Enables members to post messages as the group. If true, group member can post messages using the group's email address
	// instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
	// on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
	// behalf of the group's email address.
	MembersCanPostAsTheGroup pulumi.BoolPtrInput
	// Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
	// group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
	// messages from non group members are sent to the group owner's email address for approval. If approved, the message is
	// sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
	// for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
	// Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
	// recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
	// `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
	// apply to posts made on behalf of the group.
	MessageModerationLevel pulumi.StringPtrInput
	// The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
	// found at Google Workspace Email Settings API Email Language Tags.
	PrimaryLanguage pulumi.StringPtrInput
	// Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
	// group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
	// address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
	// `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
	// `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
	// `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
	// message is sent to the group's managers, which includes all managers and the group owner.
	ReplyTo pulumi.StringPtrInput
	// Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
	// message is rejected, send the deny message notification to the message author. The
	// `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
	// true. If false, when a message is rejected, no notification is sent.
	SendMessageDenyNotification pulumi.BoolPtrInput
	// Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
	// group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
	// message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
	SpamModerationLevel pulumi.StringPtrInput
	// Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
	// `OWNERS_ONLY` - `NONE`
	WhoCanAssistContent pulumi.StringPtrInput
	// Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
	// `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
	WhoCanContactOwner pulumi.StringPtrInput
	// Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
	// `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
	WhoCanDiscoverGroup pulumi.StringPtrInput
	// Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
	// domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
	// with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
	// Non members can request an invitation to join.
	WhoCanJoin pulumi.StringPtrInput
	// Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
	// `NONE_CAN_LEAVE`
	WhoCanLeaveGroup pulumi.StringPtrInput
	// Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
	// `NONE`
	WhoCanModerateContent pulumi.StringPtrInput
	// Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
	WhoCanModerateMembers pulumi.StringPtrInput
	// Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
	// post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
	// error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
	// `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
	// can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
	// the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
	// Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
	// the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
	// belonging to the organization are not allowed to become members of this group.
	WhoCanPostMessage pulumi.StringPtrInput
	// Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
	// messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
	// All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
	// messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
	WhoCanViewGroup pulumi.StringPtrInput
	// Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
	// group members list. If a group already has external members, those members can still send email to this group. -
	// `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
	// can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
	WhoCanViewMembership pulumi.StringPtrInput
}

func (GroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupSettingsArgs)(nil)).Elem()
}

type GroupSettingsInput interface {
	pulumi.Input

	ToGroupSettingsOutput() GroupSettingsOutput
	ToGroupSettingsOutputWithContext(ctx context.Context) GroupSettingsOutput
}

func (*GroupSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSettings)(nil)).Elem()
}

func (i *GroupSettings) ToGroupSettingsOutput() GroupSettingsOutput {
	return i.ToGroupSettingsOutputWithContext(context.Background())
}

func (i *GroupSettings) ToGroupSettingsOutputWithContext(ctx context.Context) GroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSettingsOutput)
}

// GroupSettingsArrayInput is an input type that accepts GroupSettingsArray and GroupSettingsArrayOutput values.
// You can construct a concrete instance of `GroupSettingsArrayInput` via:
//
//          GroupSettingsArray{ GroupSettingsArgs{...} }
type GroupSettingsArrayInput interface {
	pulumi.Input

	ToGroupSettingsArrayOutput() GroupSettingsArrayOutput
	ToGroupSettingsArrayOutputWithContext(context.Context) GroupSettingsArrayOutput
}

type GroupSettingsArray []GroupSettingsInput

func (GroupSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GroupSettings)(nil)).Elem()
}

func (i GroupSettingsArray) ToGroupSettingsArrayOutput() GroupSettingsArrayOutput {
	return i.ToGroupSettingsArrayOutputWithContext(context.Background())
}

func (i GroupSettingsArray) ToGroupSettingsArrayOutputWithContext(ctx context.Context) GroupSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSettingsArrayOutput)
}

// GroupSettingsMapInput is an input type that accepts GroupSettingsMap and GroupSettingsMapOutput values.
// You can construct a concrete instance of `GroupSettingsMapInput` via:
//
//          GroupSettingsMap{ "key": GroupSettingsArgs{...} }
type GroupSettingsMapInput interface {
	pulumi.Input

	ToGroupSettingsMapOutput() GroupSettingsMapOutput
	ToGroupSettingsMapOutputWithContext(context.Context) GroupSettingsMapOutput
}

type GroupSettingsMap map[string]GroupSettingsInput

func (GroupSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GroupSettings)(nil)).Elem()
}

func (i GroupSettingsMap) ToGroupSettingsMapOutput() GroupSettingsMapOutput {
	return i.ToGroupSettingsMapOutputWithContext(context.Background())
}

func (i GroupSettingsMap) ToGroupSettingsMapOutputWithContext(ctx context.Context) GroupSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSettingsMapOutput)
}

type GroupSettingsOutput struct{ *pulumi.OutputState }

func (GroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSettings)(nil)).Elem()
}

func (o GroupSettingsOutput) ToGroupSettingsOutput() GroupSettingsOutput {
	return o
}

func (o GroupSettingsOutput) ToGroupSettingsOutputWithContext(ctx context.Context) GroupSettingsOutput {
	return o
}

// Identifies whether members external to your organization can join the group. If true, Google Workspace users external to
// your organization can become members of this group. If false, users not belonging to the organization are not allowed to
// become members of this group.
func (o GroupSettingsOutput) AllowExternalMembers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolPtrOutput { return v.AllowExternalMembers }).(pulumi.BoolPtrOutput)
}

// Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to
// communicate with the group.
func (o GroupSettingsOutput) AllowWebPosting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolPtrOutput { return v.AllowWebPosting }).(pulumi.BoolPtrOutput)
}

// Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group
// are rejected. The older archived messages are browsable and searchable. If true, the `who_can_post_message` property is
// set to `NONE_CAN_POST`. If reverted from true to false, `who_can_post_message` is set to `ALL_MANAGERS_CAN_POST`. If
// false, The group is active and can receive messages. When false, updating `who_can_post_message` to `NONE_CAN_POST`,
// results in an error.
func (o GroupSettingsOutput) ArchiveOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolPtrOutput { return v.ArchiveOnly }).(pulumi.BoolPtrOutput)
}

// Set the content of custom footer text. The maximum number of characters is 1,000.
func (o GroupSettingsOutput) CustomFooterText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.CustomFooterText }).(pulumi.StringPtrOutput)
}

// An email address used when replying to a message if the `reply_to` property is set to `REPLY_TO_CUSTOM`. This address is
// defined by an account administrator. When the group's `reply_to` property is set to `REPLY_TO_CUSTOM`, the
// `custom_reply_to` property holds a custom email address used when replying to a message, the `custom_reply_to` property
// must have a text value or an error is returned.
func (o GroupSettingsOutput) CustomReplyTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.CustomReplyTo }).(pulumi.StringPtrOutput)
}

// Specifies whether the group has a custom role that's included in one of the settings being merged.
func (o GroupSettingsOutput) CustomRolesEnabledForSettingsToBeMerged() pulumi.BoolOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolOutput { return v.CustomRolesEnabledForSettingsToBeMerged }).(pulumi.BoolOutput)
}

// When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this
// property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters.
// Requires `send_message_deny_notification` property to be true.
func (o GroupSettingsOutput) DefaultMessageDenyNotificationText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.DefaultMessageDenyNotificationText }).(pulumi.StringPtrOutput)
}

// Description of the group. The maximum group description is no more than 300 characters.
func (o GroupSettingsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The group's email address.
func (o GroupSettingsOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// Specifies whether a collaborative inbox will remain turned on for the group.
func (o GroupSettingsOutput) EnableCollaborativeInbox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolPtrOutput { return v.EnableCollaborativeInbox }).(pulumi.BoolPtrOutput)
}

// Whether to include custom footer.
func (o GroupSettingsOutput) IncludeCustomFooter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolPtrOutput { return v.IncludeCustomFooter }).(pulumi.BoolPtrOutput)
}

// Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List.
// If false, it is not included in the Global Address List.
func (o GroupSettingsOutput) IncludeInGlobalAddressList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolPtrOutput { return v.IncludeInGlobalAddressList }).(pulumi.BoolPtrOutput)
}

// Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive
// of messages sent to this group. If false, previously archived messages remain in the archive.
func (o GroupSettingsOutput) IsArchived() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolPtrOutput { return v.IsArchived }).(pulumi.BoolPtrOutput)
}

// Enables members to post messages as the group. If true, group member can post messages using the group's email address
// instead of their own email address. Message appear to originate from the group itself. Any message moderation settings
// on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in
// behalf of the group's email address.
func (o GroupSettingsOutput) MembersCanPostAsTheGroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolPtrOutput { return v.MembersCanPostAsTheGroup }).(pulumi.BoolPtrOutput)
}

// Moderation level of incoming messages. Possible values are: - `MODERATE_ALL_MESSAGES`: All messages are sent to the
// group owner's email address for approval. If approved, the message is sent to the group. - `MODERATE_NON_MEMBERS`: All
// messages from non group members are sent to the group owner's email address for approval. If approved, the message is
// sent to the group. - `MODERATE_NEW_MEMBERS`: All messages from new members are sent to the group owner's email address
// for approval. If approved, the message is sent to the group. - `MODERATE_NONE`: No moderator approval is required.
// Messages are delivered directly to the group. Note: When the `who_can_post_message` is set to `ANYONE_CAN_POST`, we
// recommend the `message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam.When
// `member_can_post_as_the_group` is true, any message moderation settings on individual users or new members will not
// apply to posts made on behalf of the group.
func (o GroupSettingsOutput) MessageModerationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.MessageModerationLevel }).(pulumi.StringPtrOutput)
}

// Name of the group, which has a maximum size of 75 characters.
func (o GroupSettingsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The primary language for group. For a group's primary language use the language tags from the Google Workspace languages
// found at Google Workspace Email Settings API Email Language Tags.
func (o GroupSettingsOutput) PrimaryLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.PrimaryLanguage }).(pulumi.StringPtrOutput)
}

// Specifies who receives the default reply. Possible values are: - `REPLY_TO_CUSTOM`: For replies to messages, use the
// group's custom email address. When set to `REPLY_TO_CUSTOM`, the `custom_reply_to` property holds the custom email
// address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned. -
// `REPLY_TO_SENDER`: The reply sent to author of message. - `REPLY_TO_LIST`: This reply message is sent to the group. -
// `REPLY_TO_OWNER`: The reply is sent to the owner(s) of the group. This does not include the group's managers. -
// `REPLY_TO_IGNORE`: Group users individually decide where the message reply is sent. - `REPLY_TO_MANAGERS`: This reply
// message is sent to the group's managers, which includes all managers and the group owner.
func (o GroupSettingsOutput) ReplyTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.ReplyTo }).(pulumi.StringPtrOutput)
}

// Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a
// message is rejected, send the deny message notification to the message author. The
// `default_message_deny_notification_text` property is dependent on the `send_message_deny_notification` property being
// true. If false, when a message is rejected, no notification is sent.
func (o GroupSettingsOutput) SendMessageDenyNotification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.BoolPtrOutput { return v.SendMessageDenyNotification }).(pulumi.BoolPtrOutput)
}

// Specifies moderation levels for messages detected as spam. Possible values are: - `ALLOW`: Post the message to the
// group. - `MODERATE`: Send the message to the moderation queue. This is the default. - `SILENTLY_MODERATE`: Send the
// message to the moderation queue, but do not send notification to moderators. - `REJECT`: Immediately reject the message.
func (o GroupSettingsOutput) SpamModerationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.SpamModerationLevel }).(pulumi.StringPtrOutput)
}

// Specifies who can moderate metadata. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `MANAGERS_ONLY` -
// `OWNERS_ONLY` - `NONE`
func (o GroupSettingsOutput) WhoCanAssistContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.WhoCanAssistContent }).(pulumi.StringPtrOutput)
}

// Permission to contact owner of the group via web UI. Possible values are: - `ALL_IN_DOMAIN_CAN_CONTACT` -
// `ALL_MANAGERS_CAN_CONTACT` - `ALL_MEMBERS_CAN_CONTACT` - `ANYONE_CAN_CONTACT` - `ALL_OWNERS_CAN_CONTACT`
func (o GroupSettingsOutput) WhoCanContactOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.WhoCanContactOwner }).(pulumi.StringPtrOutput)
}

// Specifies the set of users for whom this group is discoverable. Possible values are: - `ANYONE_CAN_DISCOVER` -
// `ALL_IN_DOMAIN_CAN_DISCOVER` - `ALL_MEMBERS_CAN_DISCOVER`
func (o GroupSettingsOutput) WhoCanDiscoverGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.WhoCanDiscoverGroup }).(pulumi.StringPtrOutput)
}

// Permission to join group. Possible values are: - `ANYONE_CAN_JOIN`: Any Internet user, both inside and outside your
// domain, can join the group. - `ALL_IN_DOMAIN_CAN_JOIN`: Anyone in the account domain can join. This includes accounts
// with multiple domains. - `INVITED_CAN_JOIN`: Candidates for membership can be invited to join. - `CAN_REQUEST_TO_JOIN`:
// Non members can request an invitation to join.
func (o GroupSettingsOutput) WhoCanJoin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.WhoCanJoin }).(pulumi.StringPtrOutput)
}

// Permission to leave the group. Possible values are: - `ALL_MANAGERS_CAN_LEAVE` - `ALL_MEMBERS_CAN_LEAVE` -
// `NONE_CAN_LEAVE`
func (o GroupSettingsOutput) WhoCanLeaveGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.WhoCanLeaveGroup }).(pulumi.StringPtrOutput)
}

// Specifies who can moderate content. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` -
// `NONE`
func (o GroupSettingsOutput) WhoCanModerateContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.WhoCanModerateContent }).(pulumi.StringPtrOutput)
}

// Specifies who can manage members. Possible values are: - `ALL_MEMBERS` - `OWNERS_AND_MANAGERS` - `OWNERS_ONLY` - `NONE`
func (o GroupSettingsOutput) WhoCanModerateMembers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.WhoCanModerateMembers }).(pulumi.StringPtrOutput)
}

// Permissions to post messages. Possible values are: - `NONE_CAN_POST`: The group is disabled and archived. No one can
// post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an
// error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST. -
// `ALL_MANAGERS_CAN_POST`: Managers, including group owners, can post messages. - `ALL_MEMBERS_CAN_POST`: Any group member
// can post a message. - `ALL_OWNERS_CAN_POST`: Only group owners can post a message. - `ALL_IN_DOMAIN_CAN_POST`: Anyone in
// the account can post a message. - `ANYONE_CAN_POST`: Any Internet user who outside your account can access your Google
// Groups service and post a message. *Note: When `who_can_post_message` is set to `ANYONE_CAN_POST`, we recommend
// the`message_moderation_level` be set to `MODERATE_NON_MEMBERS` to protect the group from possible spam. Users not
// belonging to the organization are not allowed to become members of this group.
func (o GroupSettingsOutput) WhoCanPostMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringOutput { return v.WhoCanPostMessage }).(pulumi.StringOutput)
}

// Permissions to view group messages. Possible values are: - `ANYONE_CAN_VIEW`: Any Internet user can view the group's
// messages. - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in your account can view this group's messages. - `ALL_MEMBERS_CAN_VIEW`:
// All group members can view the group's messages. - `ALL_MANAGERS_CAN_VIEW`: Any group manager can view this group's
// messages. - `ALL_OWNERS_CAN_VIEW`: The group owners can view this group's messages.
func (o GroupSettingsOutput) WhoCanViewGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.WhoCanViewGroup }).(pulumi.StringPtrOutput)
}

// Permissions to view membership. Possible values are: - `ALL_IN_DOMAIN_CAN_VIEW`: Anyone in the account can view the
// group members list. If a group already has external members, those members can still send email to this group. -
// `ALL_MEMBERS_CAN_VIEW`: The group members can view the group members list. - `ALL_MANAGERS_CAN_VIEW`: The group managers
// can view group members list. - `ALL_OWNERS_CAN_VIEW`: The group owners can view group members list.
func (o GroupSettingsOutput) WhoCanViewMembership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSettings) pulumi.StringPtrOutput { return v.WhoCanViewMembership }).(pulumi.StringPtrOutput)
}

type GroupSettingsArrayOutput struct{ *pulumi.OutputState }

func (GroupSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GroupSettings)(nil)).Elem()
}

func (o GroupSettingsArrayOutput) ToGroupSettingsArrayOutput() GroupSettingsArrayOutput {
	return o
}

func (o GroupSettingsArrayOutput) ToGroupSettingsArrayOutputWithContext(ctx context.Context) GroupSettingsArrayOutput {
	return o
}

func (o GroupSettingsArrayOutput) Index(i pulumi.IntInput) GroupSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GroupSettings {
		return vs[0].([]*GroupSettings)[vs[1].(int)]
	}).(GroupSettingsOutput)
}

type GroupSettingsMapOutput struct{ *pulumi.OutputState }

func (GroupSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GroupSettings)(nil)).Elem()
}

func (o GroupSettingsMapOutput) ToGroupSettingsMapOutput() GroupSettingsMapOutput {
	return o
}

func (o GroupSettingsMapOutput) ToGroupSettingsMapOutputWithContext(ctx context.Context) GroupSettingsMapOutput {
	return o
}

func (o GroupSettingsMapOutput) MapIndex(k pulumi.StringInput) GroupSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GroupSettings {
		return vs[0].(map[string]*GroupSettings)[vs[1].(string)]
	}).(GroupSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSettingsInput)(nil)).Elem(), &GroupSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSettingsArrayInput)(nil)).Elem(), GroupSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSettingsMapInput)(nil)).Elem(), GroupSettingsMap{})
	pulumi.RegisterOutputType(GroupSettingsOutput{})
	pulumi.RegisterOutputType(GroupSettingsArrayOutput{})
	pulumi.RegisterOutputType(GroupSettingsMapOutput{})
}
