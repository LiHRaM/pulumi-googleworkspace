// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googleworkspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// OrgUnit resource manages Google Workspace OrgUnits. Org Unit resides under the `https://www.googleapis.com/auth/admin.directory.orgunit` client scope.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-googleworkspace/sdk/go/googleworkspace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := googleworkspace.NewOrgUnit(ctx, "org", &googleworkspace.OrgUnitArgs{
// 			Description:       pulumi.String("paper company"),
// 			ParentOrgUnitPath: pulumi.String("/"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ```sh
//  $ pulumi import googleworkspace:index/orgUnit:OrgUnit org "id:01ab2c3d4efg56h"
// ```
type OrgUnit struct {
	pulumi.CustomResourceState

	// Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
	BlockInheritance pulumi.BoolPtrOutput `pulumi:"blockInheritance"`
	// Description of the organizational unit.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ETag of the resource.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique ID of the organizational unit.
	OrgUnitId pulumi.StringOutput `pulumi:"orgUnitId"`
	// The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
	OrgUnitPath pulumi.StringOutput `pulumi:"orgUnitPath"`
	// The unique ID of the parent organizational unit.
	ParentOrgUnitId pulumi.StringOutput `pulumi:"parentOrgUnitId"`
	// The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
	ParentOrgUnitPath pulumi.StringOutput `pulumi:"parentOrgUnitPath"`
}

// NewOrgUnit registers a new resource with the given unique name, arguments, and options.
func NewOrgUnit(ctx *pulumi.Context,
	name string, args *OrgUnitArgs, opts ...pulumi.ResourceOption) (*OrgUnit, error) {
	if args == nil {
		args = &OrgUnitArgs{}
	}

	var resource OrgUnit
	err := ctx.RegisterResource("googleworkspace:index/orgUnit:OrgUnit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrgUnit gets an existing OrgUnit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrgUnit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrgUnitState, opts ...pulumi.ResourceOption) (*OrgUnit, error) {
	var resource OrgUnit
	err := ctx.ReadResource("googleworkspace:index/orgUnit:OrgUnit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrgUnit resources.
type orgUnitState struct {
	// Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
	BlockInheritance *bool `pulumi:"blockInheritance"`
	// Description of the organizational unit.
	Description *string `pulumi:"description"`
	// ETag of the resource.
	Etag *string `pulumi:"etag"`
	// The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
	Name *string `pulumi:"name"`
	// The unique ID of the organizational unit.
	OrgUnitId *string `pulumi:"orgUnitId"`
	// The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
	OrgUnitPath *string `pulumi:"orgUnitPath"`
	// The unique ID of the parent organizational unit.
	ParentOrgUnitId *string `pulumi:"parentOrgUnitId"`
	// The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
	ParentOrgUnitPath *string `pulumi:"parentOrgUnitPath"`
}

type OrgUnitState struct {
	// Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
	BlockInheritance pulumi.BoolPtrInput
	// Description of the organizational unit.
	Description pulumi.StringPtrInput
	// ETag of the resource.
	Etag pulumi.StringPtrInput
	// The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
	Name pulumi.StringPtrInput
	// The unique ID of the organizational unit.
	OrgUnitId pulumi.StringPtrInput
	// The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
	OrgUnitPath pulumi.StringPtrInput
	// The unique ID of the parent organizational unit.
	ParentOrgUnitId pulumi.StringPtrInput
	// The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
	ParentOrgUnitPath pulumi.StringPtrInput
}

func (OrgUnitState) ElementType() reflect.Type {
	return reflect.TypeOf((*orgUnitState)(nil)).Elem()
}

type orgUnitArgs struct {
	// Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
	BlockInheritance *bool `pulumi:"blockInheritance"`
	// Description of the organizational unit.
	Description *string `pulumi:"description"`
	// The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
	Name *string `pulumi:"name"`
	// The unique ID of the parent organizational unit.
	ParentOrgUnitId *string `pulumi:"parentOrgUnitId"`
	// The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
	ParentOrgUnitPath *string `pulumi:"parentOrgUnitPath"`
}

// The set of arguments for constructing a OrgUnit resource.
type OrgUnitArgs struct {
	// Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
	BlockInheritance pulumi.BoolPtrInput
	// Description of the organizational unit.
	Description pulumi.StringPtrInput
	// The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
	Name pulumi.StringPtrInput
	// The unique ID of the parent organizational unit.
	ParentOrgUnitId pulumi.StringPtrInput
	// The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
	ParentOrgUnitPath pulumi.StringPtrInput
}

func (OrgUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*orgUnitArgs)(nil)).Elem()
}

type OrgUnitInput interface {
	pulumi.Input

	ToOrgUnitOutput() OrgUnitOutput
	ToOrgUnitOutputWithContext(ctx context.Context) OrgUnitOutput
}

func (*OrgUnit) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgUnit)(nil)).Elem()
}

func (i *OrgUnit) ToOrgUnitOutput() OrgUnitOutput {
	return i.ToOrgUnitOutputWithContext(context.Background())
}

func (i *OrgUnit) ToOrgUnitOutputWithContext(ctx context.Context) OrgUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgUnitOutput)
}

// OrgUnitArrayInput is an input type that accepts OrgUnitArray and OrgUnitArrayOutput values.
// You can construct a concrete instance of `OrgUnitArrayInput` via:
//
//          OrgUnitArray{ OrgUnitArgs{...} }
type OrgUnitArrayInput interface {
	pulumi.Input

	ToOrgUnitArrayOutput() OrgUnitArrayOutput
	ToOrgUnitArrayOutputWithContext(context.Context) OrgUnitArrayOutput
}

type OrgUnitArray []OrgUnitInput

func (OrgUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrgUnit)(nil)).Elem()
}

func (i OrgUnitArray) ToOrgUnitArrayOutput() OrgUnitArrayOutput {
	return i.ToOrgUnitArrayOutputWithContext(context.Background())
}

func (i OrgUnitArray) ToOrgUnitArrayOutputWithContext(ctx context.Context) OrgUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgUnitArrayOutput)
}

// OrgUnitMapInput is an input type that accepts OrgUnitMap and OrgUnitMapOutput values.
// You can construct a concrete instance of `OrgUnitMapInput` via:
//
//          OrgUnitMap{ "key": OrgUnitArgs{...} }
type OrgUnitMapInput interface {
	pulumi.Input

	ToOrgUnitMapOutput() OrgUnitMapOutput
	ToOrgUnitMapOutputWithContext(context.Context) OrgUnitMapOutput
}

type OrgUnitMap map[string]OrgUnitInput

func (OrgUnitMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrgUnit)(nil)).Elem()
}

func (i OrgUnitMap) ToOrgUnitMapOutput() OrgUnitMapOutput {
	return i.ToOrgUnitMapOutputWithContext(context.Background())
}

func (i OrgUnitMap) ToOrgUnitMapOutputWithContext(ctx context.Context) OrgUnitMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgUnitMapOutput)
}

type OrgUnitOutput struct{ *pulumi.OutputState }

func (OrgUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgUnit)(nil)).Elem()
}

func (o OrgUnitOutput) ToOrgUnitOutput() OrgUnitOutput {
	return o
}

func (o OrgUnitOutput) ToOrgUnitOutputWithContext(ctx context.Context) OrgUnitOutput {
	return o
}

// Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
func (o OrgUnitOutput) BlockInheritance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgUnit) pulumi.BoolPtrOutput { return v.BlockInheritance }).(pulumi.BoolPtrOutput)
}

// Description of the organizational unit.
func (o OrgUnitOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgUnit) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// ETag of the resource.
func (o OrgUnitOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgUnit) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
func (o OrgUnitOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgUnit) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The unique ID of the organizational unit.
func (o OrgUnitOutput) OrgUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgUnit) pulumi.StringOutput { return v.OrgUnitId }).(pulumi.StringOutput)
}

// The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
func (o OrgUnitOutput) OrgUnitPath() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgUnit) pulumi.StringOutput { return v.OrgUnitPath }).(pulumi.StringOutput)
}

// The unique ID of the parent organizational unit.
func (o OrgUnitOutput) ParentOrgUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgUnit) pulumi.StringOutput { return v.ParentOrgUnitId }).(pulumi.StringOutput)
}

// The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
func (o OrgUnitOutput) ParentOrgUnitPath() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgUnit) pulumi.StringOutput { return v.ParentOrgUnitPath }).(pulumi.StringOutput)
}

type OrgUnitArrayOutput struct{ *pulumi.OutputState }

func (OrgUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrgUnit)(nil)).Elem()
}

func (o OrgUnitArrayOutput) ToOrgUnitArrayOutput() OrgUnitArrayOutput {
	return o
}

func (o OrgUnitArrayOutput) ToOrgUnitArrayOutputWithContext(ctx context.Context) OrgUnitArrayOutput {
	return o
}

func (o OrgUnitArrayOutput) Index(i pulumi.IntInput) OrgUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrgUnit {
		return vs[0].([]*OrgUnit)[vs[1].(int)]
	}).(OrgUnitOutput)
}

type OrgUnitMapOutput struct{ *pulumi.OutputState }

func (OrgUnitMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrgUnit)(nil)).Elem()
}

func (o OrgUnitMapOutput) ToOrgUnitMapOutput() OrgUnitMapOutput {
	return o
}

func (o OrgUnitMapOutput) ToOrgUnitMapOutputWithContext(ctx context.Context) OrgUnitMapOutput {
	return o
}

func (o OrgUnitMapOutput) MapIndex(k pulumi.StringInput) OrgUnitOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrgUnit {
		return vs[0].(map[string]*OrgUnit)[vs[1].(string)]
	}).(OrgUnitOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrgUnitInput)(nil)).Elem(), &OrgUnit{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgUnitArrayInput)(nil)).Elem(), OrgUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgUnitMapInput)(nil)).Elem(), OrgUnitMap{})
	pulumi.RegisterOutputType(OrgUnitOutput{})
	pulumi.RegisterOutputType(OrgUnitArrayOutput{})
	pulumi.RegisterOutputType(OrgUnitMapOutput{})
}
