// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googleworkspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-googleworkspace/sdk/go/googleworkspace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		dwight, err := googleworkspace.LookupUser(ctx, &GetUserArgs{
// 			PrimaryEmail: pulumi.StringRef("dwight.schrute@example.com"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("isUserAdmin", dwight.IsAdmin)
// 		return nil
// 	})
// }
// ```
func LookupUser(ctx *pulumi.Context, args *LookupUserArgs, opts ...pulumi.InvokeOption) (*LookupUserResult, error) {
	var rv LookupUserResult
	err := ctx.Invoke("googleworkspace:index/getUser:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUser.
type LookupUserArgs struct {
	// The unique ID for the user.
	Id *string `pulumi:"id"`
	// The user's primary email address. The primaryEmail must be unique and cannot be an alias of another user.
	PrimaryEmail *string `pulumi:"primaryEmail"`
}

// A collection of values returned by getUser.
type LookupUserResult struct {
	// A list of the user's addresses. The maximum allowed data size is 10Kb.
	Addresses []GetUserAddress `pulumi:"addresses"`
	// This property is true if the user has completed an initial login and accepted the Terms of Service agreement.
	AgreedToTerms bool `pulumi:"agreedToTerms"`
	// asps.list of the user's alias email addresses.
	Aliases []string `pulumi:"aliases"`
	// Indicates if user is archived.
	Archived bool `pulumi:"archived"`
	// Indicates if the user is forced to change their password at next login. This setting doesn't apply when the user signs in via a third-party identity provider.
	ChangePasswordAtNextLogin bool `pulumi:"changePasswordAtNextLogin"`
	// The time the user's account was created. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
	CreationTime string `pulumi:"creationTime"`
	// Custom fields of the user.
	CustomSchemas []GetUserCustomSchema `pulumi:"customSchemas"`
	// The customer ID to retrieve all account users. You can use the alias myCustomer to represent your account's customerId. As a reseller administrator, you can use the resold customer account's customerId. To get a customerId, use the account's primary domain in the domain parameter of a users.list request.
	CustomerId string `pulumi:"customerId"`
	// The time the user's account was deleted. The value is in ISO 8601 date and time format The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example 2010-04-05T17:30:04+01:00.
	DeletionTime string `pulumi:"deletionTime"`
	// A list of the user's email addresses. The maximum allowed data size is 10Kb.
	Emails []GetUserEmail `pulumi:"emails"`
	// ETag of the resource.
	Etag string `pulumi:"etag"`
	// A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size is 2Kb.
	ExternalIds []GetUserExternalId `pulumi:"externalIds"`
	// Stores the hash format of the password property. We recommend sending the password property value as a base 16 bit hexadecimal-encoded hash value. Set the hashFunction values as either the SHA-1, MD5, or crypt hash format.
	HashFunction string `pulumi:"hashFunction"`
	// The unique ID for the user.
	Id string `pulumi:"id"`
	// The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size is 2Kb.
	Ims []GetUserIm `pulumi:"ims"`
	// Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain.
	IncludeInGlobalAddressList bool `pulumi:"includeInGlobalAddressList"`
	// If true, the user's IP address is added to the allow list.
	IpAllowlist bool `pulumi:"ipAllowlist"`
	// Indicates a user with super admininistrator privileges.
	IsAdmin bool `pulumi:"isAdmin"`
	// Indicates if the user is a delegated administrator.
	IsDelegatedAdmin bool `pulumi:"isDelegatedAdmin"`
	// Is 2-step verification enforced.
	IsEnforcedIn2StepVerification bool `pulumi:"isEnforcedIn2StepVerification"`
	// Is enrolled in 2-step verification.
	IsEnrolledIn2StepVerification bool `pulumi:"isEnrolledIn2StepVerification"`
	// Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license.
	IsMailboxSetup bool `pulumi:"isMailboxSetup"`
	// A list of the user's keywords. The maximum allowed data size is 1Kb.
	Keywords []GetUserKeyword `pulumi:"keywords"`
	// A list of the user's languages. The maximum allowed data size is 1Kb.
	Languages []GetUserLanguage `pulumi:"languages"`
	// The last time the user logged into the user's account. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
	LastLoginTime string `pulumi:"lastLoginTime"`
	// A list of the user's locations. The maximum allowed data size is 10Kb.
	Locations []GetUserLocation `pulumi:"locations"`
	// Holds the given and family names of the user, and the read-only fullName value. The maximum number of characters in the givenName and in the familyName values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). Maximum allowed data size for this field is 1Kb.
	Names []GetUserName `pulumi:"names"`
	// asps.list of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain.
	NonEditableAliases []string `pulumi:"nonEditableAliases"`
	// The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (/).
	OrgUnitPath string `pulumi:"orgUnitPath"`
	// A list of organizations the user belongs to. The maximum allowed data size is 10Kb.
	Organizations []GetUserOrganization `pulumi:"organizations"`
	// Stores the password for the user account. A password can contain any combination of ASCII characters. A minimum of 8 characters is required. The maximum length is 100 characters. As the API does not return the value of password, this field is write-only, and the value stored in the state will be what is provided in the configuration. The field is required on create and will be empty on import.
	Password string `pulumi:"password"`
	// A list of the user's phone numbers. The maximum allowed data size is 1Kb.
	Phones []GetUserPhone `pulumi:"phones"`
	// A list of POSIX account information for the user.
	PosixAccounts []GetUserPosixAccount `pulumi:"posixAccounts"`
	// The user's primary email address. The primaryEmail must be unique and cannot be an alias of another user.
	PrimaryEmail string `pulumi:"primaryEmail"`
	// Recovery email of the user.
	RecoveryEmail string `pulumi:"recoveryEmail"`
	// Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: +16506661212.
	RecoveryPhone string `pulumi:"recoveryPhone"`
	// A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb.
	Relations []GetUserRelation `pulumi:"relations"`
	// A list of SSH public keys. The maximum allowed data size is 10Kb.
	SshPublicKeys []GetUserSshPublicKey `pulumi:"sshPublicKeys"`
	// Indicates if user is suspended.
	Suspended bool `pulumi:"suspended"`
	// Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the suspended property is true.
	SuspensionReason string `pulumi:"suspensionReason"`
	// ETag of the user's photo
	ThumbnailPhotoEtag string `pulumi:"thumbnailPhotoEtag"`
	// Photo Url of the user.
	ThumbnailPhotoUrl string `pulumi:"thumbnailPhotoUrl"`
	// A list of the user's websites. The maximum allowed data size is 2Kb.
	Websites []GetUserWebsite `pulumi:"websites"`
}

func LookupUserOutput(ctx *pulumi.Context, args LookupUserOutputArgs, opts ...pulumi.InvokeOption) LookupUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserResult, error) {
			args := v.(LookupUserArgs)
			r, err := LookupUser(ctx, &args, opts...)
			var s LookupUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserResultOutput)
}

// A collection of arguments for invoking getUser.
type LookupUserOutputArgs struct {
	// The unique ID for the user.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The user's primary email address. The primaryEmail must be unique and cannot be an alias of another user.
	PrimaryEmail pulumi.StringPtrInput `pulumi:"primaryEmail"`
}

func (LookupUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserArgs)(nil)).Elem()
}

// A collection of values returned by getUser.
type LookupUserResultOutput struct{ *pulumi.OutputState }

func (LookupUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserResult)(nil)).Elem()
}

func (o LookupUserResultOutput) ToLookupUserResultOutput() LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) ToLookupUserResultOutputWithContext(ctx context.Context) LookupUserResultOutput {
	return o
}

// A list of the user's addresses. The maximum allowed data size is 10Kb.
func (o LookupUserResultOutput) Addresses() GetUserAddressArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserAddress { return v.Addresses }).(GetUserAddressArrayOutput)
}

// This property is true if the user has completed an initial login and accepted the Terms of Service agreement.
func (o LookupUserResultOutput) AgreedToTerms() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.AgreedToTerms }).(pulumi.BoolOutput)
}

// asps.list of the user's alias email addresses.
func (o LookupUserResultOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

// Indicates if user is archived.
func (o LookupUserResultOutput) Archived() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.Archived }).(pulumi.BoolOutput)
}

// Indicates if the user is forced to change their password at next login. This setting doesn't apply when the user signs in via a third-party identity provider.
func (o LookupUserResultOutput) ChangePasswordAtNextLogin() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.ChangePasswordAtNextLogin }).(pulumi.BoolOutput)
}

// The time the user's account was created. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
func (o LookupUserResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Custom fields of the user.
func (o LookupUserResultOutput) CustomSchemas() GetUserCustomSchemaArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserCustomSchema { return v.CustomSchemas }).(GetUserCustomSchemaArrayOutput)
}

// The customer ID to retrieve all account users. You can use the alias myCustomer to represent your account's customerId. As a reseller administrator, you can use the resold customer account's customerId. To get a customerId, use the account's primary domain in the domain parameter of a users.list request.
func (o LookupUserResultOutput) CustomerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.CustomerId }).(pulumi.StringOutput)
}

// The time the user's account was deleted. The value is in ISO 8601 date and time format The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example 2010-04-05T17:30:04+01:00.
func (o LookupUserResultOutput) DeletionTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.DeletionTime }).(pulumi.StringOutput)
}

// A list of the user's email addresses. The maximum allowed data size is 10Kb.
func (o LookupUserResultOutput) Emails() GetUserEmailArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserEmail { return v.Emails }).(GetUserEmailArrayOutput)
}

// ETag of the resource.
func (o LookupUserResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Etag }).(pulumi.StringOutput)
}

// A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size is 2Kb.
func (o LookupUserResultOutput) ExternalIds() GetUserExternalIdArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserExternalId { return v.ExternalIds }).(GetUserExternalIdArrayOutput)
}

// Stores the hash format of the password property. We recommend sending the password property value as a base 16 bit hexadecimal-encoded hash value. Set the hashFunction values as either the SHA-1, MD5, or crypt hash format.
func (o LookupUserResultOutput) HashFunction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.HashFunction }).(pulumi.StringOutput)
}

// The unique ID for the user.
func (o LookupUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size is 2Kb.
func (o LookupUserResultOutput) Ims() GetUserImArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserIm { return v.Ims }).(GetUserImArrayOutput)
}

// Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain.
func (o LookupUserResultOutput) IncludeInGlobalAddressList() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.IncludeInGlobalAddressList }).(pulumi.BoolOutput)
}

// If true, the user's IP address is added to the allow list.
func (o LookupUserResultOutput) IpAllowlist() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.IpAllowlist }).(pulumi.BoolOutput)
}

// Indicates a user with super admininistrator privileges.
func (o LookupUserResultOutput) IsAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.IsAdmin }).(pulumi.BoolOutput)
}

// Indicates if the user is a delegated administrator.
func (o LookupUserResultOutput) IsDelegatedAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.IsDelegatedAdmin }).(pulumi.BoolOutput)
}

// Is 2-step verification enforced.
func (o LookupUserResultOutput) IsEnforcedIn2StepVerification() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.IsEnforcedIn2StepVerification }).(pulumi.BoolOutput)
}

// Is enrolled in 2-step verification.
func (o LookupUserResultOutput) IsEnrolledIn2StepVerification() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.IsEnrolledIn2StepVerification }).(pulumi.BoolOutput)
}

// Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license.
func (o LookupUserResultOutput) IsMailboxSetup() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.IsMailboxSetup }).(pulumi.BoolOutput)
}

// A list of the user's keywords. The maximum allowed data size is 1Kb.
func (o LookupUserResultOutput) Keywords() GetUserKeywordArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserKeyword { return v.Keywords }).(GetUserKeywordArrayOutput)
}

// A list of the user's languages. The maximum allowed data size is 1Kb.
func (o LookupUserResultOutput) Languages() GetUserLanguageArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserLanguage { return v.Languages }).(GetUserLanguageArrayOutput)
}

// The last time the user logged into the user's account. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
func (o LookupUserResultOutput) LastLoginTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.LastLoginTime }).(pulumi.StringOutput)
}

// A list of the user's locations. The maximum allowed data size is 10Kb.
func (o LookupUserResultOutput) Locations() GetUserLocationArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserLocation { return v.Locations }).(GetUserLocationArrayOutput)
}

// Holds the given and family names of the user, and the read-only fullName value. The maximum number of characters in the givenName and in the familyName values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). Maximum allowed data size for this field is 1Kb.
func (o LookupUserResultOutput) Names() GetUserNameArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserName { return v.Names }).(GetUserNameArrayOutput)
}

// asps.list of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain.
func (o LookupUserResultOutput) NonEditableAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []string { return v.NonEditableAliases }).(pulumi.StringArrayOutput)
}

// The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (/).
func (o LookupUserResultOutput) OrgUnitPath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.OrgUnitPath }).(pulumi.StringOutput)
}

// A list of organizations the user belongs to. The maximum allowed data size is 10Kb.
func (o LookupUserResultOutput) Organizations() GetUserOrganizationArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserOrganization { return v.Organizations }).(GetUserOrganizationArrayOutput)
}

// Stores the password for the user account. A password can contain any combination of ASCII characters. A minimum of 8 characters is required. The maximum length is 100 characters. As the API does not return the value of password, this field is write-only, and the value stored in the state will be what is provided in the configuration. The field is required on create and will be empty on import.
func (o LookupUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Password }).(pulumi.StringOutput)
}

// A list of the user's phone numbers. The maximum allowed data size is 1Kb.
func (o LookupUserResultOutput) Phones() GetUserPhoneArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserPhone { return v.Phones }).(GetUserPhoneArrayOutput)
}

// A list of POSIX account information for the user.
func (o LookupUserResultOutput) PosixAccounts() GetUserPosixAccountArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserPosixAccount { return v.PosixAccounts }).(GetUserPosixAccountArrayOutput)
}

// The user's primary email address. The primaryEmail must be unique and cannot be an alias of another user.
func (o LookupUserResultOutput) PrimaryEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.PrimaryEmail }).(pulumi.StringOutput)
}

// Recovery email of the user.
func (o LookupUserResultOutput) RecoveryEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.RecoveryEmail }).(pulumi.StringOutput)
}

// Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: +16506661212.
func (o LookupUserResultOutput) RecoveryPhone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.RecoveryPhone }).(pulumi.StringOutput)
}

// A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb.
func (o LookupUserResultOutput) Relations() GetUserRelationArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserRelation { return v.Relations }).(GetUserRelationArrayOutput)
}

// A list of SSH public keys. The maximum allowed data size is 10Kb.
func (o LookupUserResultOutput) SshPublicKeys() GetUserSshPublicKeyArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserSshPublicKey { return v.SshPublicKeys }).(GetUserSshPublicKeyArrayOutput)
}

// Indicates if user is suspended.
func (o LookupUserResultOutput) Suspended() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.Suspended }).(pulumi.BoolOutput)
}

// Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the suspended property is true.
func (o LookupUserResultOutput) SuspensionReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.SuspensionReason }).(pulumi.StringOutput)
}

// ETag of the user's photo
func (o LookupUserResultOutput) ThumbnailPhotoEtag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.ThumbnailPhotoEtag }).(pulumi.StringOutput)
}

// Photo Url of the user.
func (o LookupUserResultOutput) ThumbnailPhotoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.ThumbnailPhotoUrl }).(pulumi.StringOutput)
}

// A list of the user's websites. The maximum allowed data size is 2Kb.
func (o LookupUserResultOutput) Websites() GetUserWebsiteArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserWebsite { return v.Websites }).(GetUserWebsiteArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserResultOutput{})
}
