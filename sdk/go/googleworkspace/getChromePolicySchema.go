// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googleworkspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-googleworkspace/sdk/go/googleworkspace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := googleworkspace.GetChromePolicySchema(ctx, &GetChromePolicySchemaArgs{
// 			SchemaName: "chrome.printers.AllowForUsers",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("fieldDescriptions", example.FieldDescriptions)
// 		return nil
// 	})
// }
// ```
func GetChromePolicySchema(ctx *pulumi.Context, args *GetChromePolicySchemaArgs, opts ...pulumi.InvokeOption) (*GetChromePolicySchemaResult, error) {
	var rv GetChromePolicySchemaResult
	err := ctx.Invoke("googleworkspace:index/getChromePolicySchema:getChromePolicySchema", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getChromePolicySchema.
type GetChromePolicySchemaArgs struct {
	// The full qualified name of the policy schema
	SchemaName string `pulumi:"schemaName"`
}

// A collection of values returned by getChromePolicySchema.
type GetChromePolicySchemaResult struct {
	// Specific access restrictions related to this policy.
	AccessRestrictions []string `pulumi:"accessRestrictions"`
	// Additional key names that will be used to identify the target of the policy value. When specifying a policyTargetKey, each of the additional keys specified here will have to be included in the additionalTargetKeys map.
	AdditionalTargetKeyNames []GetChromePolicySchemaAdditionalTargetKeyName `pulumi:"additionalTargetKeyNames"`
	// Schema definition using proto descriptor.
	Definitions []GetChromePolicySchemaDefinition `pulumi:"definitions"`
	// Detailed description of each field that is part of the schema, represented as a JSON string.
	FieldDescriptions string `pulumi:"fieldDescriptions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Special notice messages related to setting certain values in certain fields in the schema.
	Notices []GetChromePolicySchemaNotice `pulumi:"notices"`
	// Description about the policy schema for user consumption.
	PolicyDescription string `pulumi:"policyDescription"`
	// The full qualified name of the policy schema
	SchemaName string `pulumi:"schemaName"`
	// URI to related support article for this schema.
	SupportUri string `pulumi:"supportUri"`
}

func GetChromePolicySchemaOutput(ctx *pulumi.Context, args GetChromePolicySchemaOutputArgs, opts ...pulumi.InvokeOption) GetChromePolicySchemaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetChromePolicySchemaResult, error) {
			args := v.(GetChromePolicySchemaArgs)
			r, err := GetChromePolicySchema(ctx, &args, opts...)
			var s GetChromePolicySchemaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetChromePolicySchemaResultOutput)
}

// A collection of arguments for invoking getChromePolicySchema.
type GetChromePolicySchemaOutputArgs struct {
	// The full qualified name of the policy schema
	SchemaName pulumi.StringInput `pulumi:"schemaName"`
}

func (GetChromePolicySchemaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChromePolicySchemaArgs)(nil)).Elem()
}

// A collection of values returned by getChromePolicySchema.
type GetChromePolicySchemaResultOutput struct{ *pulumi.OutputState }

func (GetChromePolicySchemaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChromePolicySchemaResult)(nil)).Elem()
}

func (o GetChromePolicySchemaResultOutput) ToGetChromePolicySchemaResultOutput() GetChromePolicySchemaResultOutput {
	return o
}

func (o GetChromePolicySchemaResultOutput) ToGetChromePolicySchemaResultOutputWithContext(ctx context.Context) GetChromePolicySchemaResultOutput {
	return o
}

// Specific access restrictions related to this policy.
func (o GetChromePolicySchemaResultOutput) AccessRestrictions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetChromePolicySchemaResult) []string { return v.AccessRestrictions }).(pulumi.StringArrayOutput)
}

// Additional key names that will be used to identify the target of the policy value. When specifying a policyTargetKey, each of the additional keys specified here will have to be included in the additionalTargetKeys map.
func (o GetChromePolicySchemaResultOutput) AdditionalTargetKeyNames() GetChromePolicySchemaAdditionalTargetKeyNameArrayOutput {
	return o.ApplyT(func(v GetChromePolicySchemaResult) []GetChromePolicySchemaAdditionalTargetKeyName {
		return v.AdditionalTargetKeyNames
	}).(GetChromePolicySchemaAdditionalTargetKeyNameArrayOutput)
}

// Schema definition using proto descriptor.
func (o GetChromePolicySchemaResultOutput) Definitions() GetChromePolicySchemaDefinitionArrayOutput {
	return o.ApplyT(func(v GetChromePolicySchemaResult) []GetChromePolicySchemaDefinition { return v.Definitions }).(GetChromePolicySchemaDefinitionArrayOutput)
}

// Detailed description of each field that is part of the schema, represented as a JSON string.
func (o GetChromePolicySchemaResultOutput) FieldDescriptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetChromePolicySchemaResult) string { return v.FieldDescriptions }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetChromePolicySchemaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChromePolicySchemaResult) string { return v.Id }).(pulumi.StringOutput)
}

// Special notice messages related to setting certain values in certain fields in the schema.
func (o GetChromePolicySchemaResultOutput) Notices() GetChromePolicySchemaNoticeArrayOutput {
	return o.ApplyT(func(v GetChromePolicySchemaResult) []GetChromePolicySchemaNotice { return v.Notices }).(GetChromePolicySchemaNoticeArrayOutput)
}

// Description about the policy schema for user consumption.
func (o GetChromePolicySchemaResultOutput) PolicyDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetChromePolicySchemaResult) string { return v.PolicyDescription }).(pulumi.StringOutput)
}

// The full qualified name of the policy schema
func (o GetChromePolicySchemaResultOutput) SchemaName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChromePolicySchemaResult) string { return v.SchemaName }).(pulumi.StringOutput)
}

// URI to related support article for this schema.
func (o GetChromePolicySchemaResultOutput) SupportUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetChromePolicySchemaResult) string { return v.SupportUri }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetChromePolicySchemaResultOutput{})
}
