// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googleworkspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-googleworkspace/sdk/go/googleworkspace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := googleworkspace.LookupDomainAlias(ctx, &GetDomainAliasArgs{
// 			DomainAliasName: "alias-example.com",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("parent-domain", example.ParentDomainName)
// 		return nil
// 	})
// }
// ```
func LookupDomainAlias(ctx *pulumi.Context, args *LookupDomainAliasArgs, opts ...pulumi.InvokeOption) (*LookupDomainAliasResult, error) {
	var rv LookupDomainAliasResult
	err := ctx.Invoke("googleworkspace:index/getDomainAlias:getDomainAlias", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainAlias.
type LookupDomainAliasArgs struct {
	// The domain alias name.
	DomainAliasName string `pulumi:"domainAliasName"`
}

// A collection of values returned by getDomainAlias.
type LookupDomainAliasResult struct {
	// Creation time of the domain alias.
	CreationTime int `pulumi:"creationTime"`
	// The domain alias name.
	DomainAliasName string `pulumi:"domainAliasName"`
	// ETag of the resource.
	Etag string `pulumi:"etag"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.
	ParentDomainName string `pulumi:"parentDomainName"`
	// Indicates the verification state of a domain alias.
	Verified bool `pulumi:"verified"`
}

func LookupDomainAliasOutput(ctx *pulumi.Context, args LookupDomainAliasOutputArgs, opts ...pulumi.InvokeOption) LookupDomainAliasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainAliasResult, error) {
			args := v.(LookupDomainAliasArgs)
			r, err := LookupDomainAlias(ctx, &args, opts...)
			var s LookupDomainAliasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainAliasResultOutput)
}

// A collection of arguments for invoking getDomainAlias.
type LookupDomainAliasOutputArgs struct {
	// The domain alias name.
	DomainAliasName pulumi.StringInput `pulumi:"domainAliasName"`
}

func (LookupDomainAliasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainAliasArgs)(nil)).Elem()
}

// A collection of values returned by getDomainAlias.
type LookupDomainAliasResultOutput struct{ *pulumi.OutputState }

func (LookupDomainAliasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainAliasResult)(nil)).Elem()
}

func (o LookupDomainAliasResultOutput) ToLookupDomainAliasResultOutput() LookupDomainAliasResultOutput {
	return o
}

func (o LookupDomainAliasResultOutput) ToLookupDomainAliasResultOutputWithContext(ctx context.Context) LookupDomainAliasResultOutput {
	return o
}

// Creation time of the domain alias.
func (o LookupDomainAliasResultOutput) CreationTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDomainAliasResult) int { return v.CreationTime }).(pulumi.IntOutput)
}

// The domain alias name.
func (o LookupDomainAliasResultOutput) DomainAliasName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainAliasResult) string { return v.DomainAliasName }).(pulumi.StringOutput)
}

// ETag of the resource.
func (o LookupDomainAliasResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainAliasResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupDomainAliasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainAliasResult) string { return v.Id }).(pulumi.StringOutput)
}

// The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.
func (o LookupDomainAliasResultOutput) ParentDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainAliasResult) string { return v.ParentDomainName }).(pulumi.StringOutput)
}

// Indicates the verification state of a domain alias.
func (o LookupDomainAliasResultOutput) Verified() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainAliasResult) bool { return v.Verified }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainAliasResultOutput{})
}
