// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googleworkspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-googleworkspace/sdk/go/googleworkspace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := googleworkspace.LookupOrgUnit(ctx, &GetOrgUnitArgs{
// 			OrgUnitId: pulumi.StringRef("id:01ab2c3d4efg56h"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupOrgUnit(ctx *pulumi.Context, args *LookupOrgUnitArgs, opts ...pulumi.InvokeOption) (*LookupOrgUnitResult, error) {
	var rv LookupOrgUnitResult
	err := ctx.Invoke("googleworkspace:index/getOrgUnit:getOrgUnit", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrgUnit.
type LookupOrgUnitArgs struct {
	// The unique ID of the organizational unit.
	OrgUnitId *string `pulumi:"orgUnitId"`
	// The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
	OrgUnitPath *string `pulumi:"orgUnitPath"`
}

// A collection of values returned by getOrgUnit.
type LookupOrgUnitResult struct {
	// Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
	BlockInheritance bool `pulumi:"blockInheritance"`
	// Description of the organizational unit.
	Description string `pulumi:"description"`
	// ETag of the resource.
	Etag string `pulumi:"etag"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
	Name string `pulumi:"name"`
	// The unique ID of the organizational unit.
	OrgUnitId string `pulumi:"orgUnitId"`
	// The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
	OrgUnitPath string `pulumi:"orgUnitPath"`
	// The unique ID of the parent organizational unit.
	ParentOrgUnitId string `pulumi:"parentOrgUnitId"`
	// The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
	ParentOrgUnitPath string `pulumi:"parentOrgUnitPath"`
}

func LookupOrgUnitOutput(ctx *pulumi.Context, args LookupOrgUnitOutputArgs, opts ...pulumi.InvokeOption) LookupOrgUnitResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrgUnitResult, error) {
			args := v.(LookupOrgUnitArgs)
			r, err := LookupOrgUnit(ctx, &args, opts...)
			var s LookupOrgUnitResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOrgUnitResultOutput)
}

// A collection of arguments for invoking getOrgUnit.
type LookupOrgUnitOutputArgs struct {
	// The unique ID of the organizational unit.
	OrgUnitId pulumi.StringPtrInput `pulumi:"orgUnitId"`
	// The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
	OrgUnitPath pulumi.StringPtrInput `pulumi:"orgUnitPath"`
}

func (LookupOrgUnitOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgUnitArgs)(nil)).Elem()
}

// A collection of values returned by getOrgUnit.
type LookupOrgUnitResultOutput struct{ *pulumi.OutputState }

func (LookupOrgUnitResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgUnitResult)(nil)).Elem()
}

func (o LookupOrgUnitResultOutput) ToLookupOrgUnitResultOutput() LookupOrgUnitResultOutput {
	return o
}

func (o LookupOrgUnitResultOutput) ToLookupOrgUnitResultOutputWithContext(ctx context.Context) LookupOrgUnitResultOutput {
	return o
}

// Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
func (o LookupOrgUnitResultOutput) BlockInheritance() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgUnitResult) bool { return v.BlockInheritance }).(pulumi.BoolOutput)
}

// Description of the organizational unit.
func (o LookupOrgUnitResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUnitResult) string { return v.Description }).(pulumi.StringOutput)
}

// ETag of the resource.
func (o LookupOrgUnitResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUnitResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupOrgUnitResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUnitResult) string { return v.Id }).(pulumi.StringOutput)
}

// The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
func (o LookupOrgUnitResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUnitResult) string { return v.Name }).(pulumi.StringOutput)
}

// The unique ID of the organizational unit.
func (o LookupOrgUnitResultOutput) OrgUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUnitResult) string { return v.OrgUnitId }).(pulumi.StringOutput)
}

// The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
func (o LookupOrgUnitResultOutput) OrgUnitPath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUnitResult) string { return v.OrgUnitPath }).(pulumi.StringOutput)
}

// The unique ID of the parent organizational unit.
func (o LookupOrgUnitResultOutput) ParentOrgUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUnitResult) string { return v.ParentOrgUnitId }).(pulumi.StringOutput)
}

// The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
func (o LookupOrgUnitResultOutput) ParentOrgUnitPath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUnitResult) string { return v.ParentOrgUnitPath }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrgUnitResultOutput{})
}
