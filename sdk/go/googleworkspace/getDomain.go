// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googleworkspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-googleworkspace/sdk/go/googleworkspace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := googleworkspace.LookupDomain(ctx, &GetDomainArgs{
// 			DomainName: "example.com",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("domainVerified", example.Verified)
// 		return nil
// 	})
// }
// ```
func LookupDomain(ctx *pulumi.Context, args *LookupDomainArgs, opts ...pulumi.InvokeOption) (*LookupDomainResult, error) {
	var rv LookupDomainResult
	err := ctx.Invoke("googleworkspace:index/getDomain:getDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomain.
type LookupDomainArgs struct {
	// The domain name of the customer.
	DomainName string `pulumi:"domainName"`
}

// A collection of values returned by getDomain.
type LookupDomainResult struct {
	// Creation time of the domain. Expressed in Unix time format.
	CreationTime int `pulumi:"creationTime"`
	// asps.list of domain alias objects.
	DomainAliases []string `pulumi:"domainAliases"`
	// The domain name of the customer.
	DomainName string `pulumi:"domainName"`
	// ETag of the resource.
	Etag string `pulumi:"etag"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// Indicates if the domain is a primary domain.
	IsPrimary bool `pulumi:"isPrimary"`
	// Indicates the verification state of a domain.
	Verified bool `pulumi:"verified"`
}

func LookupDomainOutput(ctx *pulumi.Context, args LookupDomainOutputArgs, opts ...pulumi.InvokeOption) LookupDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainResult, error) {
			args := v.(LookupDomainArgs)
			r, err := LookupDomain(ctx, &args, opts...)
			var s LookupDomainResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainResultOutput)
}

// A collection of arguments for invoking getDomain.
type LookupDomainOutputArgs struct {
	// The domain name of the customer.
	DomainName pulumi.StringInput `pulumi:"domainName"`
}

func (LookupDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainArgs)(nil)).Elem()
}

// A collection of values returned by getDomain.
type LookupDomainResultOutput struct{ *pulumi.OutputState }

func (LookupDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainResult)(nil)).Elem()
}

func (o LookupDomainResultOutput) ToLookupDomainResultOutput() LookupDomainResultOutput {
	return o
}

func (o LookupDomainResultOutput) ToLookupDomainResultOutputWithContext(ctx context.Context) LookupDomainResultOutput {
	return o
}

// Creation time of the domain. Expressed in Unix time format.
func (o LookupDomainResultOutput) CreationTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDomainResult) int { return v.CreationTime }).(pulumi.IntOutput)
}

// asps.list of domain alias objects.
func (o LookupDomainResultOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainResult) []string { return v.DomainAliases }).(pulumi.StringArrayOutput)
}

// The domain name of the customer.
func (o LookupDomainResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// ETag of the resource.
func (o LookupDomainResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if the domain is a primary domain.
func (o LookupDomainResultOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainResult) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// Indicates the verification state of a domain.
func (o LookupDomainResultOutput) Verified() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainResult) bool { return v.Verified }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainResultOutput{})
}
