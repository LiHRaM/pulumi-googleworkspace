# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetOrgUnitResult',
    'AwaitableGetOrgUnitResult',
    'get_org_unit',
    'get_org_unit_output',
]

@pulumi.output_type
class GetOrgUnitResult:
    """
    A collection of values returned by getOrgUnit.
    """
    def __init__(__self__, block_inheritance=None, description=None, etag=None, id=None, name=None, org_unit_id=None, org_unit_path=None, parent_org_unit_id=None, parent_org_unit_path=None):
        if block_inheritance and not isinstance(block_inheritance, bool):
            raise TypeError("Expected argument 'block_inheritance' to be a bool")
        pulumi.set(__self__, "block_inheritance", block_inheritance)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if etag and not isinstance(etag, str):
            raise TypeError("Expected argument 'etag' to be a str")
        pulumi.set(__self__, "etag", etag)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if org_unit_id and not isinstance(org_unit_id, str):
            raise TypeError("Expected argument 'org_unit_id' to be a str")
        pulumi.set(__self__, "org_unit_id", org_unit_id)
        if org_unit_path and not isinstance(org_unit_path, str):
            raise TypeError("Expected argument 'org_unit_path' to be a str")
        pulumi.set(__self__, "org_unit_path", org_unit_path)
        if parent_org_unit_id and not isinstance(parent_org_unit_id, str):
            raise TypeError("Expected argument 'parent_org_unit_id' to be a str")
        pulumi.set(__self__, "parent_org_unit_id", parent_org_unit_id)
        if parent_org_unit_path and not isinstance(parent_org_unit_path, str):
            raise TypeError("Expected argument 'parent_org_unit_path' to be a str")
        pulumi.set(__self__, "parent_org_unit_path", parent_org_unit_path)

    @property
    @pulumi.getter(name="blockInheritance")
    def block_inheritance(self) -> bool:
        """
        Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
        """
        return pulumi.get(self, "block_inheritance")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Description of the organizational unit.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def etag(self) -> str:
        """
        ETag of the resource.
        """
        return pulumi.get(self, "etag")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="orgUnitId")
    def org_unit_id(self) -> str:
        """
        The unique ID of the organizational unit.
        """
        return pulumi.get(self, "org_unit_id")

    @property
    @pulumi.getter(name="orgUnitPath")
    def org_unit_path(self) -> str:
        """
        The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
        """
        return pulumi.get(self, "org_unit_path")

    @property
    @pulumi.getter(name="parentOrgUnitId")
    def parent_org_unit_id(self) -> str:
        """
        The unique ID of the parent organizational unit.
        """
        return pulumi.get(self, "parent_org_unit_id")

    @property
    @pulumi.getter(name="parentOrgUnitPath")
    def parent_org_unit_path(self) -> str:
        """
        The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
        """
        return pulumi.get(self, "parent_org_unit_path")


class AwaitableGetOrgUnitResult(GetOrgUnitResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrgUnitResult(
            block_inheritance=self.block_inheritance,
            description=self.description,
            etag=self.etag,
            id=self.id,
            name=self.name,
            org_unit_id=self.org_unit_id,
            org_unit_path=self.org_unit_path,
            parent_org_unit_id=self.parent_org_unit_id,
            parent_org_unit_path=self.parent_org_unit_path)


def get_org_unit(org_unit_id: Optional[str] = None,
                 org_unit_path: Optional[str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOrgUnitResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_googleworkspace as googleworkspace

    org = googleworkspace.get_org_unit(org_unit_id="id:01ab2c3d4efg56h")
    ```


    :param str org_unit_id: The unique ID of the organizational unit.
    :param str org_unit_path: The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
    """
    __args__ = dict()
    __args__['orgUnitId'] = org_unit_id
    __args__['orgUnitPath'] = org_unit_path
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('googleworkspace:index/getOrgUnit:getOrgUnit', __args__, opts=opts, typ=GetOrgUnitResult).value

    return AwaitableGetOrgUnitResult(
        block_inheritance=__ret__.block_inheritance,
        description=__ret__.description,
        etag=__ret__.etag,
        id=__ret__.id,
        name=__ret__.name,
        org_unit_id=__ret__.org_unit_id,
        org_unit_path=__ret__.org_unit_path,
        parent_org_unit_id=__ret__.parent_org_unit_id,
        parent_org_unit_path=__ret__.parent_org_unit_path)


@_utilities.lift_output_func(get_org_unit)
def get_org_unit_output(org_unit_id: Optional[pulumi.Input[Optional[str]]] = None,
                        org_unit_path: Optional[pulumi.Input[Optional[str]]] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOrgUnitResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_googleworkspace as googleworkspace

    org = googleworkspace.get_org_unit(org_unit_id="id:01ab2c3d4efg56h")
    ```


    :param str org_unit_id: The unique ID of the organizational unit.
    :param str org_unit_path: The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
    """
    ...
