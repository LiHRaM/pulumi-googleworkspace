# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['OrgUnitArgs', 'OrgUnit']

@pulumi.input_type
class OrgUnitArgs:
    def __init__(__self__, *,
                 block_inheritance: Optional[pulumi.Input[bool]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 parent_org_unit_id: Optional[pulumi.Input[str]] = None,
                 parent_org_unit_path: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a OrgUnit resource.
        :param pulumi.Input[bool] block_inheritance: Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
        :param pulumi.Input[str] description: Description of the organizational unit.
        :param pulumi.Input[str] name: The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
        :param pulumi.Input[str] parent_org_unit_id: The unique ID of the parent organizational unit.
        :param pulumi.Input[str] parent_org_unit_path: The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
        """
        if block_inheritance is not None:
            pulumi.set(__self__, "block_inheritance", block_inheritance)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if parent_org_unit_id is not None:
            pulumi.set(__self__, "parent_org_unit_id", parent_org_unit_id)
        if parent_org_unit_path is not None:
            pulumi.set(__self__, "parent_org_unit_path", parent_org_unit_path)

    @property
    @pulumi.getter(name="blockInheritance")
    def block_inheritance(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
        """
        return pulumi.get(self, "block_inheritance")

    @block_inheritance.setter
    def block_inheritance(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "block_inheritance", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the organizational unit.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="parentOrgUnitId")
    def parent_org_unit_id(self) -> Optional[pulumi.Input[str]]:
        """
        The unique ID of the parent organizational unit.
        """
        return pulumi.get(self, "parent_org_unit_id")

    @parent_org_unit_id.setter
    def parent_org_unit_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "parent_org_unit_id", value)

    @property
    @pulumi.getter(name="parentOrgUnitPath")
    def parent_org_unit_path(self) -> Optional[pulumi.Input[str]]:
        """
        The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
        """
        return pulumi.get(self, "parent_org_unit_path")

    @parent_org_unit_path.setter
    def parent_org_unit_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "parent_org_unit_path", value)


@pulumi.input_type
class _OrgUnitState:
    def __init__(__self__, *,
                 block_inheritance: Optional[pulumi.Input[bool]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 etag: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 org_unit_id: Optional[pulumi.Input[str]] = None,
                 org_unit_path: Optional[pulumi.Input[str]] = None,
                 parent_org_unit_id: Optional[pulumi.Input[str]] = None,
                 parent_org_unit_path: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OrgUnit resources.
        :param pulumi.Input[bool] block_inheritance: Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
        :param pulumi.Input[str] description: Description of the organizational unit.
        :param pulumi.Input[str] etag: ETag of the resource.
        :param pulumi.Input[str] name: The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
        :param pulumi.Input[str] org_unit_id: The unique ID of the organizational unit.
        :param pulumi.Input[str] org_unit_path: The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
        :param pulumi.Input[str] parent_org_unit_id: The unique ID of the parent organizational unit.
        :param pulumi.Input[str] parent_org_unit_path: The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
        """
        if block_inheritance is not None:
            pulumi.set(__self__, "block_inheritance", block_inheritance)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if etag is not None:
            pulumi.set(__self__, "etag", etag)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if org_unit_id is not None:
            pulumi.set(__self__, "org_unit_id", org_unit_id)
        if org_unit_path is not None:
            pulumi.set(__self__, "org_unit_path", org_unit_path)
        if parent_org_unit_id is not None:
            pulumi.set(__self__, "parent_org_unit_id", parent_org_unit_id)
        if parent_org_unit_path is not None:
            pulumi.set(__self__, "parent_org_unit_path", parent_org_unit_path)

    @property
    @pulumi.getter(name="blockInheritance")
    def block_inheritance(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
        """
        return pulumi.get(self, "block_inheritance")

    @block_inheritance.setter
    def block_inheritance(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "block_inheritance", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the organizational unit.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def etag(self) -> Optional[pulumi.Input[str]]:
        """
        ETag of the resource.
        """
        return pulumi.get(self, "etag")

    @etag.setter
    def etag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "etag", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="orgUnitId")
    def org_unit_id(self) -> Optional[pulumi.Input[str]]:
        """
        The unique ID of the organizational unit.
        """
        return pulumi.get(self, "org_unit_id")

    @org_unit_id.setter
    def org_unit_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org_unit_id", value)

    @property
    @pulumi.getter(name="orgUnitPath")
    def org_unit_path(self) -> Optional[pulumi.Input[str]]:
        """
        The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
        """
        return pulumi.get(self, "org_unit_path")

    @org_unit_path.setter
    def org_unit_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org_unit_path", value)

    @property
    @pulumi.getter(name="parentOrgUnitId")
    def parent_org_unit_id(self) -> Optional[pulumi.Input[str]]:
        """
        The unique ID of the parent organizational unit.
        """
        return pulumi.get(self, "parent_org_unit_id")

    @parent_org_unit_id.setter
    def parent_org_unit_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "parent_org_unit_id", value)

    @property
    @pulumi.getter(name="parentOrgUnitPath")
    def parent_org_unit_path(self) -> Optional[pulumi.Input[str]]:
        """
        The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
        """
        return pulumi.get(self, "parent_org_unit_path")

    @parent_org_unit_path.setter
    def parent_org_unit_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "parent_org_unit_path", value)


class OrgUnit(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 block_inheritance: Optional[pulumi.Input[bool]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 parent_org_unit_id: Optional[pulumi.Input[str]] = None,
                 parent_org_unit_path: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        OrgUnit resource manages Google Workspace OrgUnits. Org Unit resides under the `https://www.googleapis.com/auth/admin.directory.orgunit` client scope.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_googleworkspace as googleworkspace

        org = googleworkspace.OrgUnit("org",
            description="paper company",
            parent_org_unit_path="/")
        ```

        ## Import

        ```sh
         $ pulumi import googleworkspace:index/orgUnit:OrgUnit org "id:01ab2c3d4efg56h"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] block_inheritance: Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
        :param pulumi.Input[str] description: Description of the organizational unit.
        :param pulumi.Input[str] name: The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
        :param pulumi.Input[str] parent_org_unit_id: The unique ID of the parent organizational unit.
        :param pulumi.Input[str] parent_org_unit_path: The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[OrgUnitArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        OrgUnit resource manages Google Workspace OrgUnits. Org Unit resides under the `https://www.googleapis.com/auth/admin.directory.orgunit` client scope.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_googleworkspace as googleworkspace

        org = googleworkspace.OrgUnit("org",
            description="paper company",
            parent_org_unit_path="/")
        ```

        ## Import

        ```sh
         $ pulumi import googleworkspace:index/orgUnit:OrgUnit org "id:01ab2c3d4efg56h"
        ```

        :param str resource_name: The name of the resource.
        :param OrgUnitArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OrgUnitArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 block_inheritance: Optional[pulumi.Input[bool]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 parent_org_unit_id: Optional[pulumi.Input[str]] = None,
                 parent_org_unit_path: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OrgUnitArgs.__new__(OrgUnitArgs)

            __props__.__dict__["block_inheritance"] = block_inheritance
            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            __props__.__dict__["parent_org_unit_id"] = parent_org_unit_id
            __props__.__dict__["parent_org_unit_path"] = parent_org_unit_path
            __props__.__dict__["etag"] = None
            __props__.__dict__["org_unit_id"] = None
            __props__.__dict__["org_unit_path"] = None
        super(OrgUnit, __self__).__init__(
            'googleworkspace:index/orgUnit:OrgUnit',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            block_inheritance: Optional[pulumi.Input[bool]] = None,
            description: Optional[pulumi.Input[str]] = None,
            etag: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            org_unit_id: Optional[pulumi.Input[str]] = None,
            org_unit_path: Optional[pulumi.Input[str]] = None,
            parent_org_unit_id: Optional[pulumi.Input[str]] = None,
            parent_org_unit_path: Optional[pulumi.Input[str]] = None) -> 'OrgUnit':
        """
        Get an existing OrgUnit resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] block_inheritance: Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
        :param pulumi.Input[str] description: Description of the organizational unit.
        :param pulumi.Input[str] etag: ETag of the resource.
        :param pulumi.Input[str] name: The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
        :param pulumi.Input[str] org_unit_id: The unique ID of the organizational unit.
        :param pulumi.Input[str] org_unit_path: The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
        :param pulumi.Input[str] parent_org_unit_id: The unique ID of the parent organizational unit.
        :param pulumi.Input[str] parent_org_unit_path: The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OrgUnitState.__new__(_OrgUnitState)

        __props__.__dict__["block_inheritance"] = block_inheritance
        __props__.__dict__["description"] = description
        __props__.__dict__["etag"] = etag
        __props__.__dict__["name"] = name
        __props__.__dict__["org_unit_id"] = org_unit_id
        __props__.__dict__["org_unit_path"] = org_unit_path
        __props__.__dict__["parent_org_unit_id"] = parent_org_unit_id
        __props__.__dict__["parent_org_unit_path"] = parent_org_unit_path
        return OrgUnit(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="blockInheritance")
    def block_inheritance(self) -> pulumi.Output[Optional[bool]]:
        """
        Defaults to `false`. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
        """
        return pulumi.get(self, "block_inheritance")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Description of the organizational unit.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def etag(self) -> pulumi.Output[str]:
        """
        ETag of the resource.
        """
        return pulumi.get(self, "etag")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales*support parent path is sales*support.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="orgUnitId")
    def org_unit_id(self) -> pulumi.Output[str]:
        """
        The unique ID of the organizational unit.
        """
        return pulumi.get(self, "org_unit_id")

    @property
    @pulumi.getter(name="orgUnitPath")
    def org_unit_path(self) -> pulumi.Output[str]:
        """
        The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [chromeosdevices.update a user](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users#update_user).
        """
        return pulumi.get(self, "org_unit_path")

    @property
    @pulumi.getter(name="parentOrgUnitId")
    def parent_org_unit_id(self) -> pulumi.Output[str]:
        """
        The unique ID of the parent organizational unit.
        """
        return pulumi.get(self, "parent_org_unit_id")

    @property
    @pulumi.getter(name="parentOrgUnitPath")
    def parent_org_unit_path(self) -> pulumi.Output[str]:
        """
        The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
        """
        return pulumi.get(self, "parent_org_unit_path")

