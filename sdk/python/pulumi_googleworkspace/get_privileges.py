# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetPrivilegesResult',
    'AwaitableGetPrivilegesResult',
    'get_privileges',
]

@pulumi.output_type
class GetPrivilegesResult:
    """
    A collection of values returned by getPrivileges.
    """
    def __init__(__self__, etag=None, id=None, items=None):
        if etag and not isinstance(etag, str):
            raise TypeError("Expected argument 'etag' to be a str")
        pulumi.set(__self__, "etag", etag)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def etag(self) -> str:
        """
        ETag of the resource.
        """
        return pulumi.get(self, "etag")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetPrivilegesItemResult']:
        """
        A list of Privilege resources. The API returns a tree-like structure with parent-child privileges, the provider flattens this list.
        """
        return pulumi.get(self, "items")


class AwaitableGetPrivilegesResult(GetPrivilegesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPrivilegesResult(
            etag=self.etag,
            id=self.id,
            items=self.items)


def get_privileges(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPrivilegesResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('googleworkspace:index/getPrivileges:getPrivileges', __args__, opts=opts, typ=GetPrivilegesResult).value

    return AwaitableGetPrivilegesResult(
        etag=__ret__.etag,
        id=__ret__.id,
        items=__ret__.items)
